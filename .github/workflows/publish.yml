name: Build & Publish to (Test)PyPI

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:

permissions:
  contents: read
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true
      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - name: Upgrade build tooling
        run: python -m pip install -U pip build twine
      - name: Clean
        run: rm -rf dist build *.egg-info || true
      - name: Build sdist & wheel
        run: python -m build
      - name: Twine check (local)
        run: python -m twine check dist/*
      - name: Upload dist artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/*
          if-no-files-found: error

  publish-testpypi:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v') && contains(github.ref, 'rc')
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist
      - name: Inspect METADATA (debug)
        run: |
          python - <<'PY'
          import glob, zipfile, sys
          wheels = sorted(glob.glob("dist/*.whl"))
          if not wheels:
              print("❌ Aucun .whl trouvé"); sys.exit(2)
          for whl in wheels:
              with zipfile.ZipFile(whl) as zf:
                  meta = [n for n in zf.namelist() if n.endswith(".dist-info/METADATA")]
                  if not meta:
                      print(f"❌ {whl}: pas de METADATA"); continue
                  data = zf.read(meta[0]).decode("utf-8","replace")
                  print(f"--- {whl} :: {meta[0]} ---")
                  print("\n".join(data.splitlines()[:25]))
                  print("--- FIN ---")
          PY
      - name: Twine check (downloaded)
        run: python -m twine check dist/*
      - name: Publish to TestPyPI (OIDC)
        uses: pypa/gh-action-pypi-publish@v1.12.2
        with:
          repository-url: https://test.pypi.org/legacy/
          packages-dir: dist
          skip-existing: true
          verify-metadata: true
          attestations: false
        continue-on-error: true

  publish-pypi:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v') && !contains(github.ref, 'rc')
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist
      - name: Inspect METADATA (debug)
        run: |
          python - <<'PY'
          import glob, zipfile, sys
          wheels = sorted(glob.glob("dist/*.whl"))
          if not wheels:
              print("❌ Aucun .whl trouvé"); sys.exit(2)
          for whl in wheels:
              with zipfile.ZipFile(whl) as zf:
                  meta = [n for n in zf.namelist() if n.endswith(".dist-info/METADATA")]
                  if not meta:
                      print(f"❌ {whl}: pas de METADATA"); continue
                  data = zf.read(meta[0]).decode("utf-8","replace")
                  print(f"--- {whl} :: {meta[0]} ---")
                  print("\n".join(data.splitlines()[:25]))
                  print("--- FIN ---")
          PY
      - name: Twine check (downloaded)
        run: python -m twine check dist/*
      - name: Publish to PyPI (OIDC)
        uses: pypa/gh-action-pypi-publish@v1.12.2
        with:
          packages-dir: dist
          skip-existing: true
          verify-metadata: true
          attestations: false
