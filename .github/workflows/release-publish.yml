name: release-publish
on:
  push:
    tags:
      - "v*"
concurrency:
  group: release-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: write
  attestations: write
  id-token: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with: { fetch-depth: 0 }

      - name: Setup Python (cache pip si besoin)
        uses: actions/setup-python@v6
        with: { python-version: "3.12" }

      - name: Cache pip (best-effort)
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install deps (best-effort)
        run: |
          set -e
          if ls requirements*.txt >/dev/null 2>&1; then
            python -m pip install -U pip -c constraints/security-pins.txt
            pip install -r requirements.txt || true -c constraints/security-pins.txt
          fi

      - name: Build artifacts (dist-all)
        run: |
          make dist-all || make dist || true
          ls -l dist || true

      - name: Generate SBOM via Anchore (CycloneDX)
        uses: anchore/sbom-action@v0
        with:
          path: .
          format: cyclonedx-json
          output-file: dist/sbom.cdx.repo.json

      - name: Compute checksums (fallback si Makefile incomplet)
        run: |
          set -e
          cd dist || exit 0
          if [ ! -f *.sha256 ] 2>/dev/null; then
            rm -f ALL.sha256
            for f in *; do [ "$f" = "ALL.sha256" ] && continue; sha256sum "$f" >> ALL.sha256; done
          fi
          ls -l

      - name: Upload Release (assets)
        uses: softprops/action-gh-release@v2
        with:
          files: |
            dist/**
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Attest build provenance (DSSE)
        uses: actions/attest-build-provenance@v1
        with:
          subject-path: "dist/**"
