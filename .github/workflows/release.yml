name: Build & Publish

on:
  push:
    tags:
      - 'v*-rc*'  # release-candidates -> TestPyPI
      - 'v*'      # final releases -> PyPI

jobs:
  build:
    name: Build dist
    runs-on: ubuntu-latest
    outputs:
      dist-created: ${{ steps.build.outputs.dist }}
    steps:
      - uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install build deps
        run: python -m pip install --upgrade pip build

      - name: Build sdist & wheel
        id: build
        run: |
          rm -rf dist build *.egg-info || true
          python -m build
          # produce a signal if dist exists
          if [ -n "$(ls -1 dist 2>/dev/null)" ]; then echo "::set-output name=dist::ok"; fi

  publish:
    name: Publish package
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install twine
        run: python -m pip install --upgrade pip twine

      - name: Publish to TestPyPI (RC tags)
        if: startsWith(github.ref, 'refs/tags/v') && contains(github.ref, '-rc')
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.TESTPYPI_API_TOKEN }}
        run: |
          python -m twine upload --non-interactive --repository-url https://test.pypi.org/legacy/ dist/*

      - name: Publish to PyPI (final tags)
        if: startsWith(github.ref, 'refs/tags/v') && !contains(github.ref, '-rc')
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: |
          python -m twine upload --non-interactive dist/*

  smoke-install-testpypi:
    name: Smoke-install from TestPyPI (after RC publish)
    needs: publish
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v') && contains(github.ref, '-rc')
    steps:
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Smoke install package from TestPyPI
        run: |
          python -m venv /tmp/venv-smoke
          /tmp/venv-smoke/bin/python -m pip install --upgrade pip
          /tmp/venv-smoke/bin/pip install -i https://test.pypi.org/simple \
            --extra-index-url https://pypi.org/simple \
            "mcgt==$(python -c 'import tomllib,sys, pathlib; p=pathlib.Path(\"pyproject.toml\").read_text(); d=tomllib.loads(p); print(d.get(\"project\",{}).get(\"version\",\"\"))' 2>/dev/null || echo 0 )" || true
          /tmp/venv-smoke/bin/python -c "import mcgt, sys; print('smoke-import', mcgt.__version__)"
          /tmp/venv-smoke/bin/python -m mcgt --version || true
