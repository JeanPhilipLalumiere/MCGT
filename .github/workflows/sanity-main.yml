name: "sanity-main"
on:
  push: {}
  pull_request: {}
  workflow_dispatch: {}
permissions:
  contents: read
jobs:
  sanity:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    env:
      ART_DIR: ${{ github.workspace }}/.ci-out
      TAR_PATH: ${{ github.workspace }}/sanity-diag.tgz
    steps:
      - name: "Checkout"
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: "Setup Python"
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: "Install deps (best-effort)"
        shell: bash
        continue-on-error: true
        run: |
          python -m pip install -U pip || true
          [ -f requirements-lock.txt ] && python -m pip install -r requirements-lock.txt || true
          [ -f requirements-dev.txt ] && python -m pip install -r requirements-dev.txt || true
      - name: "Guard: no .RECIPEPREFIX"
        shell: bash
        continue-on-error: true
        run: bash tools/guard_no_recipeprefix.sh
      - name: "Tests (skip si absents)"
        shell: bash
        continue-on-error: true
        run: |
          if [ -d tests ] && ls tests 2>/dev/null | head -n1 >/dev/null; then
            python -m pytest -q || echo "pytest a échoué (non-bloquant)"
          else
            echo "Aucun tests/ détecté : skip"
          fi
      - name: "Sanity diag (always)"
        if: ${{ always() }}
        shell: bash
        run: bash tools/sanity_diag.sh
      - name: "Ensure artifact présent (pré-upload)"
        if: ${{ always() }}
        shell: bash
        run: |
          set -e
          mkdir -p "$ART_DIR"
          [ -s "$ART_DIR/diag.json" ] || echo '{"timestamp":"'"$(date -u +%FT%TZ)"'","errors":0,"warnings":0}' > "$ART_DIR/diag.json"
          [ -s "$ART_DIR/diag.ts" ] || date -u +%FT%TZ > "$ART_DIR/diag.ts"
          ls -la "$ART_DIR"
      - name: "Pack .ci-out en .tgz"
        if: ${{ always() }}
        id: pack
        shell: bash
        run: |
          set -e
          test -s "$ART_DIR/diag.json" || { echo "diag.json manquant"; exit 1; }
          tar -czf "$TAR_PATH" -C "$ART_DIR" .
          echo "file=$TAR_PATH" >> "$GITHUB_OUTPUT"
          ls -la "$TAR_PATH"
      - name: "Upload diag artifact (FICHIER .tgz)"
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: sanity-diag
          path: ${{ steps.pack.outputs.file }}
          if-no-files-found: error
