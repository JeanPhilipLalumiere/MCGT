===== zz-scripts/chapter01/generate_data_chapter01.py
REASON: IndentationError: expected an indented block after function definition on line 22
      16: import numpy as np
      17: import pandas as pd
      18: from scipy.interpolate import PchipInterpolator, interp1d
      19: from scipy.signal import savgol_filter
      20: 
      21: 
>>    22: def read_jalons(path):
      23:     pass
      24: pass  # auto-added by STEP04b
      25: df = pd.read_csv(path)
      26: if "T_i" in df.columns and "T" not in df.columns:
      27: pass  # auto-added by STEP04b
      28: df = df.rename(columns={"T_i": "T"})

===== zz-scripts/chapter01/plot_fig01_early_plateau.py
REASON: IndentationError: expected an indented block after function definition on line 59
      53: plt.savefig(output_path, dpi=300)
      54: 
      55: # === MCGT CLI SEED v2 ===
      56: if __name__ == "__main__":
      57:     pass  # auto-added by STEP05c
      58: pass  # auto-added by STEP04b
>>    59: def _mcgt_cli_seed():
      60:     pass
      61: pass  # auto-added by STEP04b
      62: import os
      63: import argparse
      64: import sys
      65: import traceback

===== zz-scripts/chapter01/plot_fig02_logistic_calibration.py
REASON: IndentationError: expected an indented block after function definition on line 41
      35: plt.savefig(output_file)
      36: 
      37: # === MCGT CLI SEED v2 ===
      38: if __name__ == "__main__":
      39:     pass  # auto-added by STEP05c
      40: pass  # auto-added by STEP04b
>>    41: def _mcgt_cli_seed():
      42:     pass
      43: pass  # auto-added by STEP04b
      44: import os
      45: import argparse
      46: import sys
      47: import traceback

===== zz-scripts/chapter01/plot_fig03_relative_error_timeline.py
REASON: IndentationError: expected an indented block after function definition on line 43
      37: plt.savefig(output_file)
      38: 
      39: # === MCGT CLI SEED v2 ===
      40: if __name__ == "__main__":
      41:     pass  # auto-added by STEP05c
      42: pass  # auto-added by STEP04b
>>    43: def _mcgt_cli_seed():
      44:     pass
      45: pass  # auto-added by STEP04b
      46: import os
      47: import argparse
      48: import sys
      49: import traceback

===== zz-scripts/chapter01/plot_fig04_P_vs_T_evolution.py
REASON: IndentationError: expected an indented block after function definition on line 43
      37: plt.savefig(output_file)
      38: 
      39: # === MCGT CLI SEED v2 ===
      40: if __name__ == "__main__":
      41:     pass  # auto-added by STEP05c
      42: pass  # auto-added by STEP04b
>>    43: def _mcgt_cli_seed():
      44:     pass
      45: pass  # auto-added by STEP04b
      46: import os
      47: import argparse
      48: import sys
      49: import traceback

===== zz-scripts/chapter01/plot_fig05_I1_vs_T.py
REASON: IndentationError: expected an indented block after function definition on line 34
      28: plt.savefig(output_file)
      29: 
      30: # === MCGT CLI SEED v2 ===
      31: if __name__ == "__main__":
      32:     pass  # auto-added by STEP05c
      33: pass  # auto-added by STEP04b
>>    34: def _mcgt_cli_seed():
      35:     pass
      36: pass  # auto-added by STEP04b
      37: import os
      38: import argparse
      39: import sys
      40: import traceback

===== zz-scripts/chapter01/plot_fig06_P_derivative_comparison.py
REASON: IndentationError: expected an indented block after function definition on line 39
      33: plt.savefig(out)
      34: 
      35: # === MCGT CLI SEED v2 ===
      36: if __name__ == "__main__":
      37:     pass  # auto-added by STEP05c
      38: pass  # auto-added by STEP04b
>>    39: def _mcgt_cli_seed():
      40:     pass
      41: pass  # auto-added by STEP04b
      42: import os
      43: import argparse
      44: import sys
      45: import traceback

===== zz-scripts/chapter02/generate_data_chapter02.py
REASON: IndentationError: expected an indented block after function definition on line 34
      28: from scipy.signal import savgol_filter
      29: 
      30: logging.basicConfig(level=logging.INFO, format="%(levelname)s: %(message)s")
      31: 
      32: 
      33: # --- Section 2 : Fonctions utilitaires ---
>>    34: def dotP(T, a0, ainf, Tc, Delta, Tp):
      35:     pass
      36: pass  # auto-added by STEP04b
      37: a_log = a0 + (ainf - a0) / (1 + np.exp(-(T - Tc) / Delta))
      38: a = a_log * (1 - np.exp(-((T / Tp) ** 2)))
      39: da_log = (
      40: ((ainf - a0) / Delta)

===== zz-scripts/chapter02/plot_fig00_spectrum.py
REASON: IndentationError: expected an indented block after 'for' statement on line 22
      16: k = np.logspace(-4, 2, 100)
      17: alphas = [0.0, 0.05, 0.1]
      18: 
      19: # Création de la figure
      20: fig, ax = plt.subplots(figsize=(6, 4))
      21: 
>>    22: for alpha in alphas:
      23: pass  # auto-added by STEP04b
      24: ax.loglog(k, P_R(k, alpha), label=f"α = {alpha}")
      25: 
      26: ax.set_xlabel("k [h·Mpc⁻¹]")
      27: ax.set_ylabel("P_R(k; α)", labelpad=12)  # labelpad pour décaler plus à droite
      28: ax.set_title("Spectre primordial MCGT")

===== zz-scripts/chapter02/plot_fig01_P_vs_T_evolution.py
REASON: IndentationError: expected an indented block after function definition on line 47
      41: plt.savefig(FIG_DIR / "fig_01_P_vs_T_evolution.png")
      42: 
      43: # === MCGT CLI SEED v2 ===
      44: if __name__ == "__main__":
      45:     pass  # auto-added by STEP05c
      46: pass  # auto-added by STEP04b
>>    47: def _mcgt_cli_seed():
      48:     pass
      49: pass  # auto-added by STEP04b
      50: import os
      51: import argparse
      52: import sys
      53: import traceback

===== zz-scripts/chapter02/plot_fig02_calibration.py
REASON: IndentationError: expected an indented block after function definition on line 42
      36: plt.savefig(FIG_DIR / "fig_02_calibration.png")
      37: 
      38: # === MCGT CLI SEED v2 ===
      39: if __name__ == "__main__":
      40:     pass  # auto-added by STEP05c
      41: pass  # auto-added by STEP04b
>>    42: def _mcgt_cli_seed():
      43:     pass
      44: pass  # auto-added by STEP04b
      45: import os
      46: import argparse
      47: import sys
      48: import traceback

===== zz-scripts/chapter02/plot_fig03_relative_errors.py
REASON: IndentationError: expected an indented block after function definition on line 64
      58: plt.savefig(FIG_DIR / "fig_03_relative_errors.png")
      59: 
      60: # === MCGT CLI SEED v2 ===
      61: if __name__ == "__main__":
      62:     pass  # auto-added by STEP05c
      63: pass  # auto-added by STEP04b
>>    64: def _mcgt_cli_seed():
      65:     pass
      66: pass  # auto-added by STEP04b
      67: import os
      68: import argparse
      69: import sys
      70: import traceback

===== zz-scripts/chapter02/plot_fig04_pipeline_diagram.py
REASON: SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='?

===== zz-scripts/chapter03/plot_fig07_ricci_fR_vs_z.py
REASON: SyntaxError: unterminated string literal (detected at line 196)
     190: framealpha=0.8,
     191: edgecolor="black",
     192: )
     193: 
     194:     # 8. Titre avec plage effective
     195: ax1.set_title(
>>   196: r"Jalons $f_R$ et $f_{RR} $ vs redshift $z\in[{"
     197: zmin:.2f},\,{
     198: zmax:.2f}]$" )
     199: 
     200:     # 9. Finalisation
     201: fig=plt.gcf(); fig.subplots_adjust(left=0.07,right=0.98,top=0.95,bottom=0.12)
     202: fig.savefig(FIG_PATH)

===== zz-scripts/chapter03/plot_fig08_ricci_fR_vs_T.py
REASON: SyntaxError: unterminated string literal (detected at line 190)
     184: edgecolor="black",
     185: )
     186: 
     187:     # 6. Titre
     188: Tmin, Tmax = df["T_Gyr"].min(), df["T_Gyr"].max()
     189: ax1.set_title(
>>   190: r"Jalons $f_R$ et $f_{RR} $ vs âge $T\in[{"
     191: Tmin:.2f},{
     192: Tmax:.2f}]\,$Gyr" )
     193: 
     194:     # 7. Finalisation
     195: fig.subplots_adjust(left=0.07,right=0.98,top=0.95,bottom=0.12)
     196: fig.savefig(FIG_PATH)

===== zz-scripts/chapter04/plot_fig04_relative_deviations.py
REASON: IndentationError: expected an indented block after function definition on line 19
      13: 
      14: import matplotlib.pyplot as plt
      15: import numpy as np
      16: import pandas as pd
      17: 
      18: 
>>    19: def main():
      20:     pass
      21: pass  # auto-added by STEP04b
      22:     # ----------------------------------------------------------------------
      23:     # 1bis. Définition de la transition logistique
      24:     # ----------------------------------------------------------------------
      25: Tp = 0.087  # Gyr, point de transition issu du script d’intégration

===== zz-scripts/chapter05/generate_data_chapter05.py
REASON: SyntaxError: invalid syntax

===== zz-scripts/chapter05/plot_fig02_dh_model_vs_obs.py
REASON: SyntaxError: invalid syntax

===== zz-scripts/chapter05/plot_fig04_chi2_vs_T.py
REASON: SyntaxError: invalid syntax

===== zz-scripts/chapter06/generate_data_chapter06.py
REASON: IndentationError: expected an indented block after 'with' statement on line 53
      47: DATA_DIR.mkdir(parents=True, exist_ok=True)
      48: 
      49:     # ---LOAD CHAPTER-2 SPECTRUM COEFFICIENTS---
      50: 
      51:     # Note: chapter02 path uses English folder name 'chapter02' and spec file
      52: SPEC2_FILE = ROOT / "zz-data" / "chapter02" / "02_spec_spectrum.json"
>>    53: with open(SPEC2_FILE, encoding="utf-8") as f:
      54: pass  # auto-added by STEP04b
      55: pass  # auto-added for smoke
      56: spec2 = json.load(f)
      57: 
      58: A_S0 = (
      59: spec2["constantes"]["A_s0"]

===== zz-scripts/chapter06/generate_pdot_plateau_vs_z.py
REASON: IndentationError: expected an indented block after 'if' statement on line 59
      53: comments="",
      54: fmt="%.6e  %.6e",
      55: )
      56: logging.info(f"Fichier généré → {OUT_FILE}")
      57: 
      58:     # === MCGT CLI SEED v2 ===
>>    59: if __name__ == "__main__":
      60: pass  # auto-added by STEP04b
      61: pass  # auto-added for smoke
      62: def _mcgt_cli_seed():
      63: pass  # auto-added by STEP04b
      64: pass  # auto-added for smoke
      65: import os, argparse, sys, traceback

===== zz-scripts/chapter06/plot_fig01_cmb_dataflow_diagram.py
REASON: SyntaxError: invalid syntax

===== zz-scripts/chapter06/plot_fig03_delta_cls_relative.py
REASON: IndentationError: expected an indented block after 'with' statement on line 32
      26: DELTA_CLS_REL_CSV = DATA_DIR / "06_delta_cls_relative.csv"
      27: JSON_PARAMS = DATA_DIR / "06_params_cmb.json"
      28: OUT_PNG = FIG_DIR / "fig_03_delta_cls_rel.png"
      29: FIG_DIR.mkdir(parents=True, exist_ok=True)
      30: 
      31: # Load injection parameters
>>    32: with open(JSON_PARAMS, encoding="utf-8") as f:
      33: pass  # auto-added by STEP04b
      34: params = json.load(f)
      35: ALPHA = params.get("alpha", None)
      36: Q0STAR = params.get("q0star", None)
      37: logging.info(f"Tracé fig_03 avec α={ALPHA}, q0*={Q0STAR}")
      38: 

===== zz-scripts/chapter06/plot_fig04_delta_rs_vs_params.py
REASON: IndentationError: expected an indented block after 'with' statement on line 35
      29: # Load scan data
      30: df = pd.read_csv(DATA_CSV)
      31: x = df["q0star"].values
      32: y = df["delta_rs_rel"].values
      33: 
      34: # Load injection parameters for annotation
>>    35: with open(JSON_PARAMS, encoding="utf-8") as f:
      36: pass  # auto-added by STEP04b
      37: params = json.load(f)
      38: ALPHA = params.get("alpha", None)
      39: Q0STAR = params.get("q0star", None)
      40: logging.info(f"Tracé fig_04 avec α={ALPHA}, q0*={Q0STAR}")
      41: 

===== zz-scripts/chapter06/plot_fig05_delta_chi2_heatmap.py
REASON: IndentationError: expected an indented block after 'with' statement on line 31
      25: DATA_CSV = DATA_DIR / "06_cmb_chi2_scan2D.csv"
      26: JSON_PARAMS = DATA_DIR / "06_params_cmb.json"
      27: OUT_PNG = FIG_DIR / "fig_05_heatmap_delta_chi2.png"
      28: FIG_DIR.mkdir(parents=True, exist_ok=True)
      29: 
      30: # Load injection parameters for annotation
>>    31: with open(JSON_PARAMS, encoding="utf-8") as f:
      32: pass  # auto-added by STEP04b
      33: params = json.load(f)
      34: ALPHA = params.get("alpha", None)
      35: Q0STAR = params.get("q0star", None)
      36: logging.info(f"Tracé fig_05 avec α={ALPHA}, q0*={Q0STAR}")
      37: 

===== zz-scripts/chapter07/plot_fig01_cs2_heatmap.py
REASON: SyntaxError: invalid syntax

===== zz-scripts/chapter07/plot_fig02_delta_phi_heatmap.py
REASON: SyntaxError: invalid syntax

===== zz-scripts/chapter07/plot_fig03_invariant_I1.py
REASON: IndentationError: expected an indented block after 'if' statement on line 50
      44: # ─────────────────── Tracé
      45: fig, ax = plt.subplots(figsize=(8, 5), constrained_layout=True)
      46: 
      47: ax.loglog(k, I1, lw=2, color="#1f77b4", label=r"$I_1(k)=c_s^2/k$")
      48: 
      49: # loi ∝ k⁻¹ sur une décennie après k_split
>>    50: if np.isfinite(k_split):
      51: pass  # auto-added by STEP04b
      52: kk = np.logspace(np.log10(k_split) - 1, np.log10(k_split), 2)
      53: ax.loglog(
      54: kk,
      55: (I1[np.argmin(abs(k - k_split))] * k_split) / kk,
      56: ls="--",

===== zz-scripts/chapter07/plot_fig04_dcs2_vs_k.py
REASON: IndentationError: expected an indented block after function definition on line 88
      82: ax.xaxis.set_minor_locator(LogLocator(base=10, subs=(2, 5)))
      83: ax.yaxis.set_major_locator(LogLocator(base=10))
      84: ax.yaxis.set_minor_locator(LogLocator(base=10, subs=(2, 5)))
      85: 
      86: 
      87: # Formatter pour n'afficher que les puissances de 10
>>    88: def pow_fmt(x, pos):
      89:     pass
      90: pass  # auto-added by STEP04b
      91: if x <= 0 or not np.isfinite(x):
      92: pass  # auto-added by STEP04b
      93: return ""
      94: return r"$10^{{{int(np.log10(x))}}}$"

===== zz-scripts/chapter07/plot_fig05_ddelta_phi_vs_k.py
REASON: IndentationError: expected an indented block after 'if' statement on line 47
      41: raise FileNotFoundError(f"Meta parameters not found: {JSON_META}")
      42: meta = json.loads(JSON_META.read_text("utf-8"))
      43: k_split = float(meta.get("x_split", 0.02))
      44: logging.info("k_split = %.2e h/Mpc", k_split)
      45: 
      46: # --- Chargement des données ---
>>    47: if not CSV_DDK.exists():
      48: pass  # auto-added by STEP04b
      49: raise FileNotFoundError(f"Data not found: {CSV_DDK}")
      50: df = pd.read_csv(CSV_DDK, comment="#")
      51: logging.info("Loaded %d points from %s", len(df), CSV_DDK.name)
      52: 
      53: k_vals = df["k"].to_numpy()

===== zz-scripts/chapter08/generate_coupling_milestones.py
REASON: IndentationError: expected an indented block after function definition on line 48
      42: print(f"✅ 08_coupling_milestones.csv generated: {out_csv}")
      43: 
      44: # === MCGT CLI SEED v2 ===
      45: if __name__ == "__main__":
      46:     pass  # auto-added by STEP05c
      47: pass  # auto-added by STEP04b
>>    48: def _mcgt_cli_seed():
      49:     pass
      50: pass  # auto-added by STEP04b
      51: import os, argparse, sys, traceback
      52: 
      53: if __name__ == "__main__":
      54: pass  # auto-added by STEP04b

===== zz-scripts/chapter08/plot_fig03_mu_vs_z.py
REASON: IndentationError: expected an indented block after function definition on line 74
      68: print("✅ fig_03_mu_vs_z.png générée dans", FIG_DIR)
      69: 
      70: # === MCGT CLI SEED v2 ===
      71: if __name__ == "__main__":
      72:     pass  # auto-added by STEP05c
      73: pass  # auto-added by STEP04b
>>    74: def _mcgt_cli_seed():
      75:     pass
      76: pass  # auto-added by STEP04b
      77: import os
      78: import argparse
      79: import sys
      80: import traceback

===== zz-scripts/chapter08/plot_fig04_chi2_heatmap.py
REASON: IndentationError: expected an indented block after 'if' statement on line 116
     110: 
     111: fig.subplots_adjust(left=0.07,bottom=0.12,right=0.98,top=0.95)
     112: fig.savefig(FIG_DIR / "fig_04_chi2_heatmap.png", dpi=300)
     113: print(f"✅ fig_04_chi2_heatmap.png générée dans {FIG_DIR}")
     114: 
     115: # === MCGT CLI SEED v2 ===
>>   116: if __name__ == "__main__":
     117: pass  # auto-added by STEP04b
     118: def _mcgt_cli_seed():
     119: pass  # auto-added by STEP04b
     120: import os
     121: import argparse
     122: import sys

===== zz-scripts/chapter09/generate_mcgt_raw_phase.py
REASON: IndentationError: expected an indented block after class definition on line 22
      16: 
      17: import numpy as np
      18: 
      19: 
      20: # --- Dataclass de paramètres ------------------------------------------------
      21: @dataclass
>>    22: class PhaseParams:
      23: pass  # auto-added by STEP04b
      24: m1: float
      25: m2: float
      26: q0star: float
      27: alpha: float
      28: phi0: float = 0.0

===== zz-scripts/chapter09/plot_fig01_phase_overlay.py
REASON: IndentationError: expected an indented block after function definition on line 33
      27: DEF_META = Path("zz-data/chapter09/09_metrics_phase.json")
      28: DEF_INI = Path("zz-configuration/gw_phase.ini")
      29: DEF_OUT = Path("zz-figures/chapter09/09_fig_01_phase_overlay.png")
      30: 
      31: 
      32: # ---------------- utils
>>    33: def setup_logger(level="INFO"):
      34:     pass
      35: pass  # auto-added by STEP04b
      36: logging.basicConfig(
      37: level=getattr(logging, level.upper(), logging.INFO),
      38: format="[%(asctime)s] [%(levelname)s] %(message)s",
      39: datefmt="%Y-%m-%d %H:%M:%S",

===== zz-scripts/chapter09/plot_fig02_residual_phase.py
REASON: IndentationError: expected an indented block after function definition on line 37
      31: import numpy as np
      32: import pandas as pd
      33: from matplotlib.lines import Line2D
      34: 
      35: 
      36: # -------------------- utils --------------------
>>    37: def setup_logger(level: str = "INFO") -> logging.Logger:
      38:     pass
      39: pass  # auto-added by STEP04b
      40: logging.basicConfig(
      41: level=getattr(logging, level.upper(), logging.INFO),
      42: format="%(asctime)s [%(levelname)s] %(message)s",
      43: datefmt="%Y-%m-%d %H:%M:%S",

===== zz-scripts/chapter09/plot_fig03_hist_absdphi_20_300.py
REASON: IndentationError: expected an indented block after function definition on line 31
      25: DEF_DIFF = Path("zz-data/chapter09/09_phase_diff.csv")
      26: DEF_META = Path("zz-data/chapter09/09_metrics_phase.json")
      27: DEF_OUT = Path("zz-figures/chapter09/09_fig_03_hist_absdphi_20_300.png")
      28: 
      29: 
      30: # -------- Utils
>>    31: def setup_logger(level: str):
      32:     pass
      33: pass  # auto-added by STEP04b
      34: logging.basicConfig(
      35: level=getattr(logging, level.upper(), logging.INFO),
      36: format="[%(asctime)s] [%(levelname)s] %(message)s",
      37: datefmt="%Y-%m-%d %H:%M:%S",

===== zz-scripts/chapter09/plot_fig04_absdphi_milestones_vs_f.py
REASON: IndentationError: expected an indented block after function definition on line 53
      47: DEF_OUT = Path("zz-figures/chapter09/09_fig_04_milestones_absdphi_vs_f.png")
      48: 
      49: 
      50: # ---------------- utilitaires ----------------
      51: 
      52: 
>>    53: def setup_logger(level: str):
      54:     pass
      55: pass  # auto-added by STEP04b
      56: logging.basicConfig(
      57: level=getattr(logging, level),
      58: format="[%(asctime)s] [%(levelname)s] %(message)s",
      59: datefmt="%Y-%m-%d %H:%M:%S",

===== zz-scripts/chapter09/plot_fig05_scatter_phi_at_fpeak.py
REASON: IndentationError: expected an indented block after function definition on line 50
      44: # ---------- Defaults ----------
      45: DEF_MILESTONES = Path("zz-data/chapter09/09_comparison_milestones.csv")
      46: DEF_OUT = Path("zz-figures/chapter09/09_fig_05_scatter_phi_at_fpeak.png")
      47: 
      48: 
      49: # ---------- Utils ----------
>>    50: def setup_logger(level: str) -> logging.Logger:
      51:     pass
      52: pass  # auto-added by STEP04b
      53: logging.basicConfig(
      54: level=getattr(logging, level),
      55: format="[%(asctime)s] [%(levelname)s] %(message)s",
      56: datefmt="%Y-%m-%d %H:%M:%S",

===== zz-scripts/chapter10/qc_wrapped_vs_unwrapped.py
REASON: SyntaxError: invalid syntax

===== zz-scripts/chapter10/recompute_p95_circular.py
REASON: IndentationError: expected an indented block after function definition on line 28
      22: import pandas as pd
      23: 
      24: from mcgt.backends.ref_phase import compute_phi_ref
      25: from mcgt.phase import phi_mcgt
      26: 
      27: 
>>    28: def circ_diff(a, b):
      29:     pass
      30: pass  # auto-added by STEP04b
      31: d = (a - b) % (2 * np.pi)
      32: d = np.where(d > np.pi, d - 2 * np.pi, d)
      33: return d
      34: 

