===== MCGT DIAG BEGIN =====
UTC 2025-10-10 17:44:23
Repo root: /home/jplal/MCGT

### 1) Hiérarchie (pivots) ###
--- . ---
  .
  ├── .ci-archive
  │   ├── 20251001T140146
  │   ├── 20251001T140400
  │   ├── ci-logs-20251001T153836.tgz
  │   ├── ci-logs-20251001T154554.tgz
  │   ├── tools-20251001T153844
  │   ├── tools-20251001T153844.tgz
  │   ├── tools-20251001T154604
  │   ├── tools-20251001T154604.tgz
  │   ├── workflows
  │   ├── workflows-20251001T160328
  │   ├── workflows-20251001T161404
  │   ├── workflows-20251001T162414
  │   ├── workflows-20251001T163221
  │   ├── workflows-20251001T163449
  │   └── workflows-bak-20251001T190347
  ├── .ci-bootstrap-20250930T201058.log
  ├── .ci-bootstrap-20250930T201256.log
  ├── .ci-bootstrap-20250930T201810.log
  ├── .ci-bootstrap-20250930T202847.log
  ├── .ci-bootstrap-20251001T100702.log
  ├── .ci-bootstrap-20251001T101812.log
  ├── .ci-bootstrap-20251001T101920.log
  ├── .ci-bootstrap-20251001T102554.log
  ├── .ci-bootstrap-20251001T103708.log
  ├── .ci-bootstrap-20251001T104719.log
  ├── .ci-bootstrap-20251001T110142.log
  ├── .ci-bootstrap-20251001T110812.log
  ├── .ci-bootstrap-20251001T112322.log
  ├── .ci-bootstrap-20251001T113346.log
  ├── .ci-bootstrap-20251001T113808.log
  ├── .ci-bootstrap-20251001T114336.log
  ├── .ci-bootstrap-20251001T114742.log
  ├── .ci-bootstrap-20251001T115209.log
  ├── .ci-bootstrap-20251001T120001.log
  ├── .ci-bootstrap-20251001T120656.log
  ├── .ci-bootstrap-20251001T121324.log
  ├── .ci-bootstrap-20251001T122754.log
  ├── .ci-bootstrap-20251001T123634.log
  ├── .ci-bootstrap-20251001T124242.log
  ├── .ci-bootstrap-20251001T125218.log
  ├── .ci-bootstrap-20251001T125755.log
  ├── .ci-bootstrap-20251001T130610.log
  ├── .ci-bootstrap-20251001T131516.log
  ├── .ci-config
  │   └── figures_orphans_allowlist.txt
  ├── .ci-create-20250930T200212.log
  ├── .ci-helpers
  │   └── guard.sh
  ├── .ci-logs
  │   ├── _extracted
  │   ├── ci_add_yaml_check-20251001T140404.log
  │   ├── ci_add_yaml_check-20251001T154621.log
  │   ├── ci_archive_logs-20251001T140400.log
  │   ├── ci_archive_logs-20251001T154554.log
  │   ├── ci_commit_and_push_all-20251001T153928.log
  │   ├── ci_commit_and_push_all-20251001T154630.log
  │   ├── ci_from_G_driver-20251001T155610.log
  │   ├── ci_from_G_driver_v2-20251001T160258.log
  │   ├── ci_prune_workflows_and_docs-20251001T160328.log
  │   ├── ci_prune_workflows_and_docs-20251001T161404.log
  │   ├── ci_prune_workflows_and_docs-20251001T162414.log
  │   ├── ci_prune_workflows_and_docs-20251001T163221.log
  │   ├── ci_prune_workflows_and_docs-20251001T163449.log
  │   ├── ci_prune_workflows_and_docs-20251001T163925.log
  │   ├── ci_select_canonical_workflow-20251001T140120.log
  │   ├── ci_select_canonical_workflow-20251001T142149.log
  │   ├── ci_select_canonical_workflow-20251001T142324.log
  │   ├── ci_select_canonical_workflow-20251001T144726.log
  │   ├── ci_select_canonical_workflow-20251001T150041.log
  │   ├── ci_select_canonical_workflow-20251001T150042.log
  │   ├── ci_select_canonical_workflow_20251001T144303.log
  │   ├── ci_trim_tools-20251001T140146.log
  │   ├── ci_trim_tools-20251001T154604.log
  │   ├── figure_rename_report_20251003T202052Z.json
  │   ├── figure_rename_report_20251003T202052Z.log
  │   ├── figure_rename_report_20251003T202103Z.json
  │   ├── figure_rename_report_20251003T202103Z.log
  │   ├── figure_rename_report_20251004T160344Z.json
  │   ├── figure_rename_report_20251004T160344Z.log
  │   ├── full.log
  │   ├── git_delete_temp_branches-20251001T140403.log
  │   ├── git_delete_temp_branches-20251001T154613.log
  │   ├── kill_duplicate_wrappers-20251001T154410.log
  │   ├── kill_duplicate_wrappers-20251001T154441.log
  │   ├── kill_duplicate_wrappers-20251001T154453.log
  │   ├── kill_duplicate_wrappers-20251001T154543.log
  │   ├── run_600_20251001T145651.log
  │   ├── run_ci_select_canonical_workflow_20251001T143912.log
  │   ├── runs
  │   ├── sanity-echo-artifacts
  │   ├── sanity-echo.full.log
  │   ├── sanity-main-artifacts
  │   ├── sanity-main.full.log
  │   ├── sanity.full.log
  │   ├── show-last-diag-20251001T134412.log
  │   ├── trigger-fetch-20251001T132335.log
  │   ├── trigger-fetch-20251001T140405.log
  │   ├── v26_select_canonical_20251001T143051.log
  │   ├── v26_select_canonical_20251001T143912.log
  │   ├── v26_select_canonical_20251001T144303.log
  │   ├── v26_select_canonical_20251001T144727.log
  │   └── v26_select_canonical_20251001T150043.log
  ├── .ci-out
  │   ├── .precommit_files.txt
  │   ├── _bundle_all_ciout.txt
  │   ├── apply_fig_renames.sh
  │   ├── ci_budgets_report.txt
  │   ├── ci_missing_setup_python.txt
  │   ├── ci_patch_plan.txt
  │   ├── cli_audit.json
  │   ├── constants_cG_candidates.tsv
  │   ├── constants_cG_report.txt
  │   ├── dummy.txt
  │   ├── eol_guard_report.txt
  │   ├── fig-smoke-20251005T025450Z
  │   ├── fig-smoke-20251005T025955Z
  │   ├── fig-smoke-20251005T130358Z
  │   ├── fig-smoke-20251005T130834Z
  │   ├── fig-smoke-20251005T131235Z
  │   ├── fig-smoke-20251005T131650Z
  │   ├── fig-smoke-20251005T132008Z
  │   ├── fig-smoke-20251005T132415Z
  │   ├── fig-smoke-20251005T132954Z
  │   ├── fig-smoke-20251005T133335Z
  │   ├── fig-smoke-20251005T133722Z
  │   ├── fig-smoke-20251005T134243Z
  │   ├── fig-smoke-20251005T135003Z
  │   ├── fig-smoke-20251005T135013Z
  │   ├── fig-smoke-20251005T135051Z
  │   ├── fig-smoke-20251005T135714Z
  │   ├── fig-smoke-20251005T135716Z
  │   ├── fig-smoke-20251005T150926Z
  │   ├── fig-smoke-20251005T150943Z
  │   ├── fig-smoke-20251005T150946Z
  │   ├── fig-smoke-20251005T161645Z
  │   ├── fig-smoke-20251005T171854Z
  │   ├── fig-smoke-20251005T182919Z
  │   ├── fig-smoke-20251005T182932Z
  │   ├── fig-smoke-20251005T184355Z
  │   ├── fig-smoke-20251005T185240Z
  │   ├── fig-smoke-20251005T193231Z
  │   ├── fig-smoke-20251005T194941Z
  │   ├── fig-smoke-20251005T202017Z
  │   ├── fig-smoke-20251005T202959Z
  │   ├── fig-smoke-20251005T203749Z
  │   ├── fig-smoke-20251005T234846Z
  │   ├── fig-smoke-20251005T235136Z
  │   ├── fig-smoke-20251005T235518Z
  │   ├── fig-smoke-20251005T235734Z
  │   ├── fig-smoke-20251006T000212Z
  │   ├── fig-smoke-20251006T002442Z
  │   ├── fig-smoke-20251006T003649Z
  │   ├── fig-smoke-20251006T005041Z
  │   ├── fig-smoke-20251006T005508Z
  │   ├── fig-smoke-20251006T005518Z
  │   ├── fig-smoke-20251006T010001Z
  │   ├── fig-smoke-20251006T010346Z
  │   ├── fig-smoke-20251006T010715Z
  │   ├── fig-smoke-20251006T011012Z
  │   ├── fig-smoke-20251006T012015Z
  │   ├── fig-smoke-20251006T012742Z
  │   ├── fig-smoke-20251006T013127Z
  │   ├── fig-smoke-20251006T014001Z
  │   ├── fig-smoke-20251006T014503Z
  │   ├── fig-smoke-20251006T014841Z
  │   ├── fig-smoke-20251006T015234Z
  │   ├── fig-smoke-20251006T020012Z
  │   ├── fig-smoke-20251006T020514Z
  │   ├── fig-smoke-20251006T021114Z
  │   ├── fig-smoke-20251006T022553Z
  │   ├── fig-smoke-20251006T023152Z
  │   ├── fig-smoke-20251006T033533Z
  │   ├── fig-smoke-20251006T133851Z
  │   ├── fig-smoke-20251006T133949Z
  │   ├── fig-smoke-20251006T140306Z
  │   ├── fig-smoke-20251006T142427Z
  │   ├── fig-smoke-20251006T143033Z
  │   ├── fig-smoke-20251006T143506Z
  │   ├── fig-smoke-20251006T145129Z
  │   ├── fig_smoke_report.json
  │   ├── figures_all.tsv
  │   ├── figures_bad_names.tsv
  │   ├── figures_bad_names.txt
  │   ├── figures_guard_report.txt
  │   ├── figures_rename_plan.tsv
  │   ├── frontmatter_samples.txt
  │   ├── labels_ch9_report.txt
  │   ├── make_vars.tsv
  │   ├── makefiles.list.txt
  │   ├── makefiles.python_var.txt
  │   ├── manifests_json_guard_report.txt
  │   ├── md_frontmatter_paths.txt
  │   ├── naming_guard_report.txt
  │   ├── parameters_registry.json
  │   ├── parameters_registry_py.log
  │   ├── parameters_registry_report.txt
  │   ├── params
  │   ├── py_constants_conflicts.tsv
  │   ├── py_constants_conflicts_report.txt
  │   ├── py_constants_guard_report.txt
  │   ├── py_constants_registry_preview.tsv
  │   ├── py_constants_snippets
  │   ├── pyproject_presence.txt
  │   ├── python_consts.tsv
  │   ├── python_consts_modules.txt
  │   ├── refresh_after_labels_py.log
  │   ├── refresh_after_labels_report.txt
  │   ├── refresh_master_manifest.diff.txt
  │   ├── refresh_master_manifest_report.txt
  │   ├── refresh_master_manifest_stats.txt
  │   ├── sanity-diag
  │   ├── scan_done.txt
  │   ├── scan_start.txt
  │   ├── schema_patch_inputs_outputs.py.log
  │   ├── schema_patch_inputs_outputs.txt
  │   ├── schema_patch_inputs_outputs_alias_list.py.log
  │   ├── schema_patch_inputs_outputs_alias_list.txt
  │   ├── schemas_after_labels.xml
  │   ├── schemas_after_labels_refresh.xml
  │   ├── schemas_guard_junit.xml
  │   ├── schemas_guard_report.txt
  │   ├── schemas_master_after_refresh.xml
  │   ├── unify_H0_report.txt
  │   ├── unify_cG_apply_py.log
  │   ├── unify_cG_apply_report.txt
  │   └── workflows.list.txt
  ├── .coveragerc
  ├── .diag_last_failed.json
  ├── .editorconfig
  ├── .git
  │   ├── COMMIT_EDITMSG
  │   ├── FETCH_HEAD
  │   ├── HEAD
  │   ├── ORIG_HEAD
  │   ├── branches
  │   ├── config
  │   ├── description
  │   ├── hooks
  │   ├── index
  │   ├── info
  │   ├── logs
  │   ├── objects
  │   ├── packed-refs
  │   └── refs
  ├── .gitattributes
  ├── .githooks
  │   └── pre-commit
  ├── .github
  │   ├── CODEOWNERS
  │   ├── CODEOWNERS.bak.20251003T154548Z
  │   ├── actions
  │   ├── dependabot.yml
  │   ├── dependabot.yml.bak.20251003T154548Z
  │   ├── pull_request_template.md
  │   └── workflows
  ├── .gitignore
  ├── .last_run_id
  ├── .pc-validate.log
  ├── .pre-commit-config.yaml
  ├── .pre-commit-config.yaml.bak
  ├── .pre-commit-config.yaml.bak.20251002T205845
  ├── .pre-commit-config.yaml.bak.20251002T205920
  ├── .pre-commit-config.yaml.bak.20251002T210831
  ├── .pre-commit-config.yaml.bak.20251002T210852
  ├── .pre-commit-config.yaml.bak.20251002T212404
  ├── .pre-commit-config.yaml.bak.20251002T212958
  ├── .pre-commit-config.yaml.bak.20251002T213907
  ├── .pre-commit-config.yaml.bak.20251002T214422
  ├── .pre-commit-config.yaml.bak.20251002T215324
  ├── .pre-commit-config.yaml.bak.20251002T215948
  ├── .pre-commit-config.yaml.bak.20251002T220830
  ├── .pre-commit-config.yaml.bak.20251003T183731
  ├── .pre-commit-config.yaml.bak.20251004T135349Z
  ├── .pre-commit-config.yaml.bak.20251004T135628Z
  ├── .pre-commit-config.yaml.bak.20251004T135753Z
  ├── .pre-commit-config.yaml.bak.20251004T135929Z
  ├── .pre-commit-config.yaml.bak.20251004T140733Z
  ├── .pre-commit-config.yaml.bak.20251004T154314Z
  ├── .pre-commit-config.yaml.bak_20251005T021005Z
  ├── .pre-commit-config.yaml.dallidbsx_bak_20251005T012512Z
  ├── .pre-commit-config.yaml.dallidbsx_bak_20251005T014953Z
  ├── .pre-commit-config.yaml.psx_bak
  ├── .pre-commit-config.yaml.psx_bak_20251005T002951Z
  ├── .pre-commit-config.yaml.psx_bak_20251005T003319Z
  ├── .pre-commit-config.yaml.psx_bak_20251005T014033Z
  ├── .pytest_cache
  │   ├── .gitignore
  │   ├── CACHEDIR.TAG
  │   ├── README.md
  │   └── v
  ├── .ruff_cache
  │   ├── .gitignore
  │   ├── 0.13.1
  │   ├── 0.4.4
  │   └── CACHEDIR.TAG
  ├── .tools
  │   └── actionlint.tar.gz
  ├── 01-introduction-applications
  │   └── CHAPTER01_GUIDE.txt
  ├── 02-validation-chronologique
  │   └── CHAPTER02_GUIDE.txt
  ├── 03-stabilite-fR
  │   └── CHAPTER03_GUIDE.txt
  ├── 04-invariants-adimensionnels
  │   └── CHAPTER04_GUIDE.txt
  ├── 05-nucleosynthese-primordiale
  │   └── CHAPTER05_GUIDE.txt
  ├── 06-rayonnement-cmb
  │   └── CHAPTER06_GUIDE.txt
  ├── 07-perturbations-scalaires
  │   └── CHAPTER07_GUIDE.txt
  ├── 08-couplage-sombre
  │   └── CHAPTER08_GUIDE.txt
  ├── 09-phase-ondes-gravitationnelles
  │   └── CHAPTER09_GUIDE.txt
  ├── 10-monte-carlo-global-8d
  │   └── CHAPTER10_GUIDE.txt
  ├── CHANGELOG.md
  ├── CONTRIBUTING.md
  ├── LICENSE
  ├── MD
  ├── Makefile
  ├── POSTMORTEM.md
  ├── README-REPRO.md
  ├── README.md
  ├── RELEASE_CHECKLIST.md
  ├── RUNBOOK.md
  ├── __pycache__
  │   └── sitecustomize.cpython-312.pyc
  ├── _reports
  │   ├── common_sources
  │   └── common_summary.md
  ├── _tmp-figs
  │   └── fig_02_cls_lcdm_vs_mcgt.png
  ├── _tools
  │   ├── phase1_2h_export_find_top_residuals.sh
  │   ├── phase2_finish.sh
  │   └── phase3_bootstrap_package.sh
  ├── archive
  │   ├── cleanup_20250930T185842Z.tar.gz
  │   ├── cleanup_20250930T190127Z.tar.gz
  │   ├── cleanup_20250930T192124Z.tar.gz
  │   ├── cleanup_20250930T192514Z.tar.gz
  │   ├── cleanup_20250930T192747Z.tar.gz
  │   ├── cleanup_20250930T192748Z.tar.gz
  │   ├── cleanup_20250930T192759Z.tar.gz
  │   ├── cleanup_20250930T192800Z.tar.gz
  │   ├── cleanup_20250930T193045Z.tar.gz
  │   ├── cleanup_20250930T193046Z.tar.gz
  │   ├── cleanup_20250930T193051Z.tar.gz
  │   ├── cleanup_20250930T193052Z.tar.gz
  │   ├── cleanup_20250930T222157Z.tar.gz
  │   ├── cleanup_20250930T222158Z.tar.gz
  │   ├── cleanup_20250930T222203Z.tar.gz
  │   ├── cleanup_20250930T222204Z.tar.gz
  │   ├── cleanup_20250930T223124Z.tar.gz
  │   ├── cleanup_20250930T223125Z.tar.gz
  │   ├── cleanup_20250930T230513Z.tar.gz
  │   ├── cleanup_20250930T230830Z.tar.gz
  │   ├── cleanup_20250930T230831Z.tar.gz
  │   ├── cleanup_20250930T231145Z.tar.gz
  │   ├── cleanup_20250930T231146Z.tar.gz
  │   ├── cleanup_20250930T231153Z.tar.gz
  │   ├── cleanup_20250930T231154Z.tar.gz
  │   ├── cleanup_20250930T231214Z.tar.gz
  │   ├── cleanup_20250930T231215Z.tar.gz
  │   ├── cleanup_20250930T231608Z.tar.gz
  │   ├── cleanup_20250930T231609Z.tar.gz
  │   └── cleanup_full_20250930T190122Z.tar.gz
  ├── config
  │   └── defaults.yml
  ├── conventions.md
  ├── create_and_run_smoke_workflow.sh
  ├── diagnose_workflow_invalid.sh
  ├── diagnose_workflow_invalid_v2.sh
  ├── docs
  │   └── CI.md
  ├── env-lock-conda.txt
  ├── environment
  ├── environment-3.10-full.yml
  ├── environment-3.12-ci.yml
  ├── environment-3.12-dev.yml
  ├── environment.disabled
  ├── environment.yml
  ├── fix_testonly_workflow_and_dispatch.sh
  ├── legacy-tex
  │   ├── 01-introduction-applications
  │   ├── 02-validation-chronologique
  │   ├── 03-stabilite-fR
  │   ├── 04-invariants-adimensionnels
  │   ├── 05-nucleosynthese-primordiale
  │   ├── 06-rayonnement-cmb
  │   ├── 07-perturbations-scalaires
  │   ├── 08-couplage-sombre
  │   ├── 09-phase-ondes-gravitationnelles
  │   └── 10-monte-carlo-global-8d
  ├── main.tex
  ├── mcgt
  │   ├── CHANGELOG.md
  │   ├── __init__.py
  │   ├── __main__.py
  │   ├── __pycache__
  │   ├── backends
  │   ├── constants.py
  │   ├── phase.py
  │   └── scalar_perturbations.py
  ├── mcgt_core.egg-info
  │   ├── PKG-INFO
  │   ├── SOURCES.txt
  │   ├── dependency_links.txt
  │   ├── requires.txt
  │   └── top_level.txt
  ├── phase4_validate.sh
  ├── pyproject-local-pytest.toml
  ├── pyproject.toml
  ├── pyproject.toml.bak.1758902208
  ├── pyproject.toml.bak.20250925-221018
  ├── pyproject.toml.bak.20250925-221248
  ├── pyproject.toml.bak.20250925-221903
  ├── pyproject.toml.bak.20250925-222104
  ├── pyproject.toml.bak.20250925-222720
  ├── pyproject.toml.before_prune_ruff_20251004T224816Z
  ├── pyproject.toml.before_prune_ruff_20251004T224835Z
  ├── pyproject.toml.before_prune_ruff_20251004T225018Z
  ├── pyproject.toml.before_prune_ruff_20251004T225631Z
  ├── pyproject.toml.before_prune_ruff_20251004T225959Z
  ├── pyproject.toml.before_prune_ruff_20251004T230315Z
  ├── pyproject.toml.before_prune_ruff_20251004T230322Z
  ├── pyproject.toml.before_prune_ruff_20251004T230540Z
  ├── pyproject.toml.before_prune_ruff_20251004T230835Z
  ├── pyproject.toml.before_prune_ruff_20251004T231217Z
  ├── pyproject.toml.before_prune_ruff_20251004T232540Z
  ├── pyproject.toml.before_prune_ruff_20251005T015720Z
  ├── pyproject.toml.before_restore_ruff_20251004T213329Z
  ├── pyproject.toml.before_restore_ruff_20251004T214244Z
  ├── pyproject.toml.before_restore_ruff_20251004T214820Z
  ├── pyproject.toml.before_restore_ruff_20251004T215441Z
  ├── pyproject.toml.before_restore_ruff_20251004T215506Z
  ├── references.bib
  ├── requirements-dev.lock.txt
  ├── requirements-dev.txt
  ├── requirements-lock.txt
  ├── requirements.txt
  ├── script_patch_publish_safe.sh
  ├── scripts
  │   ├── 03_build_upload_pypi_safe.sh
  │   ├── bump_and_tag.sh
  │   ├── bump_and_tag_safe.sh
  │   ├── check_wheel_metadata.py
  │   ├── check_wheel_metadata.py.save
  │   ├── clean_final_submission.sh
  │   ├── clean_project.sh
  │   ├── preflight_release.sh
  │   ├── release.sh
  │   └── verify_tag.sh
  ├── setup.cfg
  ├── setup.py
  ├── setup.py.bak.20250925-221024
  ├── setup.py.bak.20250925-221248
  ├── setup.py.bak.20250925-221903
  ├── sitecustomize.py
  ├── step-01-candidates.txt
  ├── tests
  │   ├── __pycache__
  │   ├── test_00_imports.py
  │   ├── test_01_cli.py
  │   ├── test_02_public_api.py
  │   └── test_fig02_columns.py
  ├── tools
  │   ├── _eq_ifpass_fix.py
  │   ├── add_shfmt_hook.sh
  │   ├── apply_ciout_guards.sh
  │   ├── apply_figure_renames_and_fix_refs.py
  │   ├── apply_param_defaults.py
  │   ├── audit_workflows.sh
  │   ├── banish_tex_from_chapters_and_manifest.sh
  │   ├── ch10_afterfix.sh
  │   ├── ch10_fix_fig02_scatter.sh
  │   ├── ch10_fix_fig05_footer.sh
  │   ├── ch10_fix_fig05_indent.sh
  │   ├── ch10_fix_fig05_restore.sh
  │   ├── ch10_fix_fig05_tightlayout.sh
  │   ├── ch10_fix_fig07_alias_indent.sh
  │   ├── ch10_fix_fig07_and_smoke.sh
  │   ├── ch10_fix_fig07_insert_opts.sh
  │   ├── ch10_fix_fig07_rewrite.sh
  │   ├── ch10_patch_and_test.sh
  │   ├── ch10_purge_tightlayout.sh
  │   ├── ch10_smoke.sh
  │   ├── check_param_drift.py
  │   ├── check_sc2129_in_workflows.sh
  │   ├── ci_add_yaml_check.sh
  │   ├── ci_archive_logs.sh
  │   ├── ci_archive_workflow_baks.sh
  │   ├── ci_combo_guards.sh
  │   ├── ci_commit_and_push_all.sh
  │   ├── ci_extend_precommit.sh
  │   ├── ci_finalize_step1.sh
  │   ├── ci_fix_actionlint_yaml.sh
  │   ├── ci_fix_exec_bits.sh
  │   ├── ci_fix_readme_encart.sh
  │   ├── ci_fix_sc2129_all.sh
  │   ├── ci_fix_sc2129_merge.sh
  │   ├── ci_fix_shellcheck_offenders.sh
  │   ├── ci_get_fixes_onto_main.sh
  │   ├── ci_patch_shell_issues.sh
  │   ├── ci_patch_workflow_shellcheck.sh
  │   ├── ci_protect_main.sh
  │   ├── ci_purge_old_ci_logs.sh
  │   ├── ci_run_sanity_and_fetch.sh
  │   ├── ci_select_canonical_workflow.sh
  │   ├── ci_show_last_diag.sh
  │   ├── ci_show_last_sanity.sh
  │   ├── ci_step10_python_constants_guard.sh
  │   ├── ci_step10a_constants_conflicts_report.sh
  │   ├── ci_step10b_unify_cG_apply.sh
  │   ├── ci_step2_validate_and_guard.sh
  │   ├── ci_step2_validate_and_guard.sh.bak.20251003T172727
  │   ├── ci_step2_validate_and_guard.sh.bak.20251003T173034
  │   ├── ci_step2_validate_and_guard.sh.bak.20251003T173342
  │   ├── ci_step2_validate_and_guard.sh.bak.20251003T173454
  │   ├── ci_step2_validate_and_guard.sh.bak.20251003T174604
  │   ├── ci_step2_validate_and_guard.sh.bak.20251003T174826
  │   ├── ci_step2_validate_and_guard.sh.bak.20251003T181239
  │   ├── ci_step2_validate_and_guard.sh.bak.20251003T181516
  │   ├── ci_step2_validate_and_guard.sh.bak.20251003T181643
  │   ├── ci_step2_validate_and_guard.sh.bak.20251003T181833
  │   ├── ci_step2_validate_and_guard.sh.bak.20251003T181951
  │   ├── ci_step3_validate_manifests.sh
  │   ├── ci_step4_guard_naming.sh
  │   ├── ci_step5_validate_manifests_json.sh
  │   ├── ci_step6_schemas_guard.sh
  │   ├── ci_step7_normalize_labels_ch9.sh
  │   ├── ci_step9_parameters_registry_guard.sh
  │   ├── ci_trigger_and_fetch_diag.sh
  │   ├── ci_trim_tools.sh
  │   ├── ci_update_readme_ci_section.sh
  │   ├── dallidbsx.sh
  │   ├── dallidbsx.sh.bak_20251005T021005Z
  │   ├── dev
  │   ├── diag_capture.sh
  │   ├── diag_env_noise.sh
  │   ├── diagnose_env_injection.sh
  │   ├── docs_write_ci_readme.sh
  │   ├── enforce_eol_and_renormalize.sh
  │   ├── extract_common_info.py
  │   ├── find_constants_list_in_schemas.sh
  │   ├── find_sc2129_suspects.sh
  │   ├── fix_ci_and_run.sh
  │   ├── fix_constants_future_order.sh
  │   ├── fix_defaults_types.py
  │   ├── fix_exec_bits_and_commit.sh
  │   ├── fix_exec_bits_and_rerun_precommit.sh
  │   ├── fix_manifest_drift_and_rerun_schemas.sh
  │   ├── fix_precommit_and_exec.sh
  │   ├── fix_precommit_config_now.sh
  │   ├── fix_pyproject_exclude_and_rerun_style.sh
  │   ├── fix_results_constants_and_validate.sh
  │   ├── fix_results_constants_deep_and_validate.sh
  │   ├── fix_results_schema_examples_constants.sh
  │   ├── fix_run_name_quotes.sh
  │   ├── fix_shfmt_precommit.sh
  │   ├── forbid_bom_crlf_tabs.sh
  │   ├── gen_defaults_from_inventory.py
  │   ├── get_fixes_onto_main.sh
  │   ├── git_delete_temp_branches.sh
  │   ├── guard_no_recipeprefix.sh
  │   ├── hermetic_pause_runner.sh
  │   ├── hermetic_pause_runner.sh.bak.20251007T163011
  │   ├── hermetic_pause_runner.sh.bak.20251007T163520
  │   ├── homog_pass2_purge_fig_tightlayout.sh
  │   ├── homog_pass3_finish_purge_and_scan.sh
  │   ├── homog_pass4_cli_inventory.sh
  │   ├── homog_pass4_cli_inventory_ast.sh
  │   ├── homog_pass4_cli_inventory_safe.sh
  │   ├── homog_pass4_cli_inventory_safe_v3.sh
  │   ├── homog_pass4_cli_inventory_safe_v4.sh
  │   ├── homog_pass4_cli_inventory_safe_v5.sh
  │   ├── homog_pass5_autofix.sh
  │   ├── homog_pass5_relocate_shim.sh
  │   ├── homog_pass5_resume.sh
  │   ├── homog_pass5b_shim_all.sh
  │   ├── homog_pass6_stubify_ch01_ch02.sh
  │   ├── homog_pass6_stubify_force.sh
  │   ├── homog_pass6_stubify_range.sh
  │   ├── homog_pass6_stubify_remaining.sh
  │   ├── homog_scan_all.sh
  │   ├── hooks
  │   ├── hotfix_ch7_fig06_guard.sh
  │   ├── hotfix_ch7_fig06_guard_safe.sh
  │   ├── hotfix_ch7_fig06_repair_syntax.sh
  │   ├── inspect_env_noise.sh
  │   ├── lib_psx.sh
  │   ├── lib_psx.sh.bak_20251005T010649Z
  │   ├── lib_psx.sh.bak_20251005T011554Z
  │   ├── lib_psx.sh.bak_20251005T014048Z
  │   ├── no_plusx_nonscripts.sh
  │   ├── normalize_constants_block.sh
  │   ├── normalize_constants_everywhere_and_validate.sh
  │   ├── pass10_stub_inventory.sh
  │   ├── pass11_destubify_ch10.sh
  │   ├── pass11b_destubify_ch01_ch02.sh
  │   ├── pass11c_destubify_ch06_07_09.sh
  │   ├── pass11d_destubify_ch05_04_03_08.sh
  │   ├── pass12_remove_shims_and_verify.sh
  │   ├── pass13_analyze.sh
  │   ├── pass13_rerun_and_analyze.sh
  │   ├── pass13_smoke_out_all.sh
  │   ├── pass14_smoke_with_mapping.sh
  │   ├── pass14_smoke_with_mapping.sh.bak
  │   ├── pass14_smoke_with_mapping.sh.bak.20251007T163011
  │   ├── pass7_ch10_quickfix.sh
  │   ├── pass7_restore_ch10_from_bak.sh
  │   ├── pass8_finish_failures.sh
  │   ├── pass9_force_stub_remaining.sh
  │   ├── pass9b_finish_zero_fail.sh
  │   ├── pass9c_zero_fail_now.sh
  │   ├── pass9d_assert_zero_fail.sh
  │   ├── patch_meta_summary_sc2129_and_run_ci.sh
  │   ├── patch_pass14_arg_fix.sh
  │   ├── patch_pass14_known_issues.py
  │   ├── patch_pass14_runner_fix.sh
  │   ├── patch_utcnow_and_revalidate.sh
  │   ├── plan_ci_patches.py
  │   ├── plan_fig_renames.py
  │   ├── precommit_full_reset.sh
  │   ├── precommit_full_reset_v2.sh
  │   ├── precommit_wrapper.sh
  │   ├── print_ciout.sh
  │   ├── print_ciout_all.sh
  │   ├── purge_huge_registry_and_repush.sh
  │   ├── rebuild_figures_sha256.sh
  │   ├── redirect_registry_to_ciout.sh
  │   ├── refresh_master_manifest_full.sh
  │   ├── refresh_master_manifest_git_hashes.sh
  │   ├── relax_ruff_now_and_reformat.sh
  │   ├── restore_precommit_from_latest_backup.sh
  │   ├── retrofit_cleanup_traps.sh
  │   ├── run_and_tail.sh
  │   ├── run_hermetic.sh
  │   ├── run_hermetic.sh.bak.20251007T163011
  │   ├── run_pass14_direct.sh
  │   ├── run_pass14_filtered.sh
  │   ├── run_pass14_hermetic.sh
  │   ├── run_pass14_hermetic.sh.bak.20251007T163011
  │   ├── run_pass14_once.sh
  │   ├── run_pass14_with_log.sh
  │   ├── run_pass14_with_pause.sh
  │   ├── run_pass14_with_pause.sh.bak.20251007T175634
  │   ├── run_pass14_with_pause.sh.bak.20251007T175824
  │   ├── run_scans.sh
  │   ├── run_with_instrumentation.sh
  │   ├── run_with_pause.sh
  │   ├── run_with_timeout_and_tail.sh
  │   ├── sanity_diag.sh
  │   ├── scan_ci_budgets.sh
  │   ├── scan_figures.py
  │   ├── scan_frontmatter.py
  │   ├── scan_make_vars.py
  │   ├── scan_md_frontmatter.sh
  │   ├── scan_params.sh
  │   ├── scan_py_consts.py
  │   ├── scan_repo.sh
  │   ├── setup_code_style_and_run.sh
  │   ├── shims
  │   ├── sourcing_probe.bash
  │   ├── step01_parse_cleanup.sh
  │   ├── step02_fix_add_argument_commas.sh
  │   ├── step03_indent_sanitizer_and_retry.sh
  │   ├── step03b_indent_fix_tryexcept_and_retry.sh
  │   ├── step04_structure_balancer.sh
  │   ├── step04b_indent_level_stack.sh
  │   ├── step05_fill_block_bodies.sh
  │   ├── step05c_fix_try_and_if_blocks.sh
  │   ├── step06_phi_mcgt_shim.sh
  │   ├── step06b_phi_mcgt_shim_fix.sh
  │   ├── step07_triage_and_minifix.sh
  │   ├── step08_env_and_decimal_sanitizer.sh
  │   ├── step09_general_call_closer.sh
  │   ├── step10_prune_unmatched_closers.sh
  │   ├── step11_fig_smoke_test.sh
  │   ├── step11_full_unmatched_pruner.sh
  │   ├── step12_invalid_syntax_sweeper.sh
  │   ├── step13_kwcomma_decimal_fixer.sh
  │   ├── step14_fix_conditional_eq_and_decimaldot.sh
  │   ├── step15_insert_commas_in_calls.sh
  │   ├── step16_insert_commas_in_paren_and_brackets.sh
  │   ├── step17_join_orphan_kwargs.sh
  │   ├── step18_join_orphan_kwargs_deeper_and_prune.sh
  │   ├── step19_iterative_invalid_syntax_fixer.sh
  │   ├── step1_manifest_reenable_test.sh
  │   ├── step20_fix_eq_in_conditions_and_ifbody.sh
  │   ├── step21_parser_guided_eq_and_try_block_fixer.sh
  │   ├── step22_token_eq_in_heads_and_try_except_completer.sh
  │   ├── step23_eq_heads_and_indent_normalizer.sh
  │   ├── step24_fix_eq_in_multiline_heads_and_ifpass.sh
  │   ├── step25_deep_eq_in_heads_and_missing_bodies.sh
  │   ├── step26_line_scoped_head_eq_and_ifpass.sh
  │   ├── step27_deep_eq_heads_no_lineno.sh
  │   ├── step28_caret_eq_and_ifpass.sh
  │   ├── step28b_caret_eq_and_ifpass_iter.sh
  │   ├── step28c_caret_eq_and_ifpass_iter_full.sh
  │   ├── step28d_eq_caret_and_ifpass.sh
  │   ├── step28e_eq_heads_inline.sh
  │   ├── step29_fix_heads_and_missing_bodies.sh
  │   ├── step2_restore_ruff_and_style.sh
  │   ├── step2b_add_temp_per_file_ignores.sh
  │   ├── step2c_fix_remaining_errors.sh
  │   ├── step30_parser_guided_eq_and_ifpass.sh
  │   ├── step31_deep_commas_and_eq_heads.sh
  │   ├── step32_report_remaining.sh
  │   ├── step33_sanitize_commas_and_heads.sh
  │   ├── step34_fix_mpl_rcparams_and_plotargs.sh
  │   ├── step35_unglue_argparse_and_basicconfig.sh
  │   ├── step36_heal_logging_plot_argparse_and_lists.sh
  │   ├── step37_polish_syntax_blocks.sh
  │   ├── step38_heal_glue_and_calls.sh
  │   ├── step39_finish_glue_and_balancing.sh
  │   ├── step3_reduce_ruff_ignores_ch07_ch08.sh
  │   ├── step40_doctor_blocks.sh
  │   ├── step41_sweep_logging_argparse_paths.sh
  │   ├── step42_last_mile_syntax.sh
  │   ├── step43_targeted_fixes.sh
  │   ├── step44_targeted_round2.sh
  │   ├── step45_more_targeted.sh
  │   ├── step46_ultra_targeted.sh
  │   ├── step47_even_more_targeted.sh
  │   ├── step48_final_cleanups.sh
  │   ├── step49_hotfix_remaining.sh
  │   ├── step4_fix_ch07_ch08_inline_errors.sh
  │   ├── step4b_finalize_ruff_and_shebangs.sh
  │   ├── step4c_finalize.sh
  │   ├── step50_hotfix_remaining.sh
  │   ├── step51_hotfix_remaining2.sh
  │   ├── step52_hotfix_remaining3.sh
  │   ├── step53_hotfix_remaining4.sh
  │   ├── step54_hotfix_remaining5.sh
  │   ├── step55_hotfix_remaining6.sh
  │   ├── step56_hotfix_remaining7.sh
  │   ├── step5_repo_sanity_suite.sh
  │   ├── step6_prune_ruff_ignores.sh
  │   ├── step6_prune_ruff_ignores.sh.bak
  │   ├── step7_cli_audit.sh
  │   ├── summarize_pass14.sh
  │   ├── trace_env_source.sh
  │   ├── trace_env_source_v2.sh
  │   ├── trace_sourcing.sh
  │   ├── unskip_diag_consistency_when_ready.sh
  │   ├── watch_head_ci.sh
  │   └── yaml_check.sh
  ├── zz-checklists
  │   ├── CHAPTER01_CHECKLIST.txt
  │   ├── CHAPTER02_CHECKLIST.txt
  │   ├── CHAPTER03_CHECKLIST.txt
  │   ├── CHAPTER04_CHECKLIST.txt
  │   ├── CHAPTER05_CHECKLIST.txt
  │   ├── CHAPTER06_CHECKLIST.txt
  │   ├── CHAPTER07_CHECKLIST.txt
  │   ├── CHAPTER08_CHECKLIST.txt
  │   ├── CHAPTER09_CHECKLIST.txt
  │   └── CHAPTER10_CHECKLIST.txt
  ├── zz-config
  │   └── smoke_args_map.csv
  ├── zz-configuration
  │   ├── GWTC-3-confident-events.json
  │   ├── README.md
  │   ├── camb_exact_plateau.ini
  │   ├── gw_phase.ini
  │   ├── mcgt-global-config.ini
  │   ├── mcgt-global-config.ini.template
  │   ├── meta_template.json
  │   ├── parameters_registry.json
  │   ├── pdot_plateau_vs_z.dat
  │   ├── perturbations_07.ini
  │   ├── python_constants_registry.json
  │   ├── python_constants_registry.json.bak.20251004T194619Z
  │   └── scalar_perturbations.ini
  ├── zz-data
  │   ├── chapter01
  │   ├── chapter02
  │   ├── chapter03
  │   ├── chapter04
  │   ├── chapter05
  │   ├── chapter06
  │   ├── chapter07
  │   ├── chapter08
  │   ├── chapter09
  │   └── chapter10
  ├── zz-figures
  │   ├── chapter01
  │   ├── chapter02
  │   ├── chapter03
  │   ├── chapter04
  │   ├── chapter05
  │   ├── chapter06
  │   ├── chapter07
  │   ├── chapter08
  │   ├── chapter09
  │   ├── chapter10
  │   └── chapter99
  ├── zz-manifests
  │   ├── README_manifest.md
  │   ├── add_to_manifest.py
  │   ├── chapters
  │   ├── diag_consistency.py
  │   ├── figure_manifest.csv
  │   ├── inventory_diff_report.md
  │   ├── manifest_master.json
  │   ├── manifest_master.json.bak.20250930T231215Z
  │   ├── manifest_master.json.bak.20250930T231609Z
  │   ├── manifest_master.json.bak.20251003T213929
  │   ├── manifest_master.json.bak.20251003T214032
  │   ├── manifest_master.json.bak.20251004T162728Z
  │   ├── manifest_master.json.bak.20251004T163201Z
  │   ├── manifest_master.json.bak.20251004T172540Z
  │   ├── manifest_master.json.bak.20251004T194143Z
  │   ├── manifest_master.json.bak.20251004T203057Z
  │   ├── manifest_master.json.bak.20251004T203511Z
  │   ├── manifest_master.json.bak.20251004T204011Z
  │   ├── manifest_master.json.bak.20251004T204437Z
  │   ├── manifest_master.json.bak.20251004T210927Z
  │   ├── manifest_master.json.bak.20251004T211001Z
  │   ├── manifest_master.json.bak.20251004T211233Z
  │   ├── manifest_master.json.bak.20251004T212554Z
  │   ├── manifest_master.json.bak.20251004T223829Z
  │   ├── manifest_master.json.bak.20251004T223834Z
  │   ├── manifest_master.json.bak.20251004T224156Z
  │   ├── manifest_master.json.bak.20251004T224200Z
  │   ├── manifest_publication.json
  │   ├── manifest_publication.sha256sum
  │   ├── manifest_report.json
  │   ├── manifest_report.md
  │   ├── meta_template.json
  │   └── migration_map.json
  ├── zz-out
  │   ├── _bad_parens.lst
  │   ├── _indent_expected.lst
  │   ├── _indent_expected_full.lst
  │   ├── _parse_fail.lst
  │   ├── _parse_fail_full.lst
  │   ├── _remaining_files.lst
  │   ├── _step05c_targets.lst
  │   ├── _step05c_targets_full.lst
  │   ├── _step07_report.txt
  │   ├── _step08_targets.lst
  │   ├── _step08_targets_full.lst
  │   ├── _step10_targets.lst
  │   ├── _step11_targets.lst
  │   ├── _step12_targets.lst
  │   ├── _step13_targets.lst
  │   ├── _step14_targets.lst
  │   ├── _step15_targets.lst
  │   ├── _step16_targets.lst
  │   ├── _step17_targets.lst
  │   ├── _step18_targets.lst
  │   ├── _step19_targets.lst
  │   ├── _step20_targets.lst
  │   ├── _step20_targets_full.lst
  │   ├── _step21_targets.lst
  │   ├── _step21_targets_full.lst
  │   ├── _step22_targets.lst
  │   ├── _step23_targets.lst
  │   ├── _step24_targets.lst
  │   ├── _step25_targets.lst
  │   ├── _step27_targets.lst
  │   ├── _step28_targets.lst
  │   ├── _step28b_targets.lst
  │   ├── _step28c_targets.lst
  │   ├── _step28d_targets.lst
  │   ├── _step28e_targets.lst
  │   ├── _step29_targets.lst
  │   ├── argv0_environment_hits_20251007T183933.log
  │   ├── argv0_environment_hits_20251007T183947.log
  │   ├── chapter07
  │   ├── chapter10
  │   ├── child_65322.xtrace.log
  │   ├── diag_env_noise_20251007T180952.log
  │   ├── diag_env_noise_20251007T180952.raw.log
  │   ├── diag_env_noise_20251007T180959.log
  │   ├── diag_env_noise_20251007T180959.raw.log
  │   ├── diag_info.txt
  │   ├── fixtures
  │   ├── hit_environment_20251007T184646_66746.log
  │   ├── hit_environment_20251007T184659_66792.log
  │   ├── homog_cli_fail_list.txt
  │   ├── homog_cli_inventory_pass4.csv
  │   ├── homog_cli_inventory_pass4.txt
  │   ├── homog_scan_failures_pass2.csv
  │   ├── homog_scan_failures_pass3.csv
  │   ├── homog_scan_report.txt
  │   ├── homog_scan_report_pass2.txt
  │   ├── homog_scan_report_pass3.txt
  │   ├── homog_smoke_pass13.csv
  │   ├── homog_smoke_pass13.log
  │   ├── homog_smoke_pass14.csv
  │   ├── homog_smoke_pass14.log
  │   ├── homog_stub_inventory.csv
  │   ├── homog_stub_inventory.txt
  │   ├── mon_run.log
  │   ├── pass13_fail_exec_signatures.txt
  │   ├── pass13_required_args.txt
  │   ├── pass13_summary_by_chapter.txt
  │   ├── pass13_unknown_args.txt
  │   ├── pass14
  │   ├── pass14_direct_20251008T064110.log
  │   ├── pass14_direct_20251008T064133.log
  │   ├── pass14_direct_20251008T064438.log
  │   ├── pass14_direct_20251008T095148.log
  │   ├── pass14_direct_20251008T095155.log
  │   ├── pass14_direct_20251008T101350.log
  │   ├── pass14_direct_20251008T103118.log
  │   ├── pass14_direct_20251008T103823.log
  │   ├── pass14_direct_20251008T104400.log
  │   ├── pass14_run
  │   ├── pass14_run1
  │   ├── pass14_run2
  │   ├── pass14_run_20251007T180205.log
  │   ├── pass14_run_20251007T180213.log
  │   ├── pass14_run_20251007T180214.log
  │   ├── pass14_run_20251007T180439.log
  │   ├── pass14_run_20251007T180441.log
  │   ├── pass14_run_20251007T180442.log
  │   ├── pass14_run_20251007T180738.log
  │   ├── pass14_run_20251007T181348.log
  │   ├── pass14_run_20251007T181349.log
  │   ├── smoke
  │   ├── smoke14
  │   ├── trace_source_20251007T181548.xtrace.log
  │   ├── trace_source_20251007T181938.xtrace.log
  │   ├── trace_source_20251007T182330.xtrace.log
  │   ├── trace_source_20251007T182401.xtrace.log
  │   ├── trace_source_20251007T182619.xtrace.log
  │   ├── trace_sourcing_20251007T185244.log
  │   ├── trace_sourcing_20251007T185331.log
  │   ├── trace_sourcing_20251007T185338.log
  │   ├── trace_sourcing_20251007T185959.log
  │   ├── trace_sourcing_20251007T190201.log
  │   ├── trace_sourcing_20251007T190210.log
  │   └── trace_sourcing_20251007T190514.log
  ├── zz-schemas
  │   ├── .lint_skipped_due_to_data.txt
  │   ├── 02_optimal_parameters.schema.json
  │   ├── 02_spec_spectrum.schema.json
  │   ├── 03_meta_stability_fR.schema.json
  │   ├── 05_nucleosynthesis_parameters.schema.json
  │   ├── 06_cmb_params.schema.json
  │   ├── 07_meta_perturbations.schema.json
  │   ├── 07_params_perturbations.schema.json
  │   ├── 08_coupling_params.schema.json
  │   ├── 09_best_params.schema.json
  │   ├── 09_phases_imrphenom.meta.schema.json
  │   ├── README.md
  │   ├── README_SCHEMAS.md
  │   ├── comparison_milestones_table_schema.json
  │   ├── consistency_rules.json
  │   ├── mc_best_schema.json
  │   ├── mc_config_schema.json
  │   ├── mc_results_table_schema.json
  │   ├── meta_schema.json
  │   ├── meta_schema.json.bak.20251004T020730Z
  │   ├── meta_schema.json.bak.20251004T021625Z
  │   ├── metrics_phase_schema.json
  │   ├── results_schema_examples.json
  │   ├── results_schema_examples.json.bak.20251004T194322Z
  │   ├── validate_all.sh
  │   ├── validate_csv_all.sh
  │   ├── validate_csv_schema.py
  │   ├── validate_csv_table.py
  │   ├── validate_json.py
  │   └── validation_globals.json
  ├── zz-scripts
  │   ├── _common
  │   ├── chapter01
  │   ├── chapter02
  │   ├── chapter03
  │   ├── chapter04
  │   ├── chapter05
  │   ├── chapter06
  │   ├── chapter07
  │   ├── chapter08
  │   ├── chapter09
  │   ├── chapter10
  │   ├── manifest_tools
  │   └── zz-figures
  ├── zz-tests
  │   ├── .pytest_cache
  │   ├── __pycache__
  │   ├── pytest.ini
  │   ├── test_manifest.py
  │   ├── test_no_tex_in_manifest.py
  │   └── test_schemas.py
  ├── zz-tools
  │   ├── json_audit_strict.py
  │   ├── manifest_check.py
  │   └── manifest_report.py
  └── zz-workflows
      ├── README.md
      └── release.yml
  
  204 directories, 796 files

--- zz-scripts ---
  zz-scripts
  ├── _common
  │   ├── __pycache__
  │   ├── cli.py
  │   ├── postparse.py
  │   └── style.py
  ├── chapter01
  │   ├── generate_data_chapter01.py
  │   ├── generate_data_chapter01.py.bak
  │   ├── generate_data_chapter01.py.pass11b
  │   ├── plot_fig01_early_plateau.py
  │   ├── plot_fig01_early_plateau.py.bak
  │   ├── plot_fig01_early_plateau.py.pass11b
  │   ├── plot_fig02_logistic_calibration.py
  │   ├── plot_fig02_logistic_calibration.py.bak
  │   ├── plot_fig02_logistic_calibration.py.pass11b
  │   ├── plot_fig03_relative_error_timeline.py
  │   ├── plot_fig03_relative_error_timeline.py.bak
  │   ├── plot_fig03_relative_error_timeline.py.pass11b
  │   ├── plot_fig04_P_vs_T_evolution.py
  │   ├── plot_fig04_P_vs_T_evolution.py.bak
  │   ├── plot_fig04_P_vs_T_evolution.py.pass11b
  │   ├── plot_fig05_I1_vs_T.py
  │   ├── plot_fig05_I1_vs_T.py.bak
  │   ├── plot_fig05_I1_vs_T.py.pass11b
  │   ├── plot_fig06_P_derivative_comparison.py
  │   ├── plot_fig06_P_derivative_comparison.py.bak
  │   ├── plot_fig06_P_derivative_comparison.py.pass11b
  │   └── requirements.txt
  ├── chapter02
  │   ├── __pycache__
  │   ├── extract_sympy_FG.ipynb
  │   ├── generate_data_chapter02.py
  │   ├── generate_data_chapter02.py.bak
  │   ├── generate_data_chapter02.py.pass11b
  │   ├── plot_fig00_spectrum.py
  │   ├── plot_fig00_spectrum.py.bak
  │   ├── plot_fig00_spectrum.py.pass11b
  │   ├── plot_fig01_P_vs_T_evolution.py
  │   ├── plot_fig01_P_vs_T_evolution.py.bak
  │   ├── plot_fig01_P_vs_T_evolution.py.pass11b
  │   ├── plot_fig02_calibration.py
  │   ├── plot_fig02_calibration.py.bak
  │   ├── plot_fig02_calibration.py.pass11b
  │   ├── plot_fig03_relative_errors.py
  │   ├── plot_fig03_relative_errors.py.bak
  │   ├── plot_fig03_relative_errors.py.pass11b
  │   ├── plot_fig04_pipeline_diagram.py
  │   ├── plot_fig04_pipeline_diagram.py.bak
  │   ├── plot_fig04_pipeline_diagram.py.pass11b
  │   ├── plot_fig05_FG_series.py
  │   ├── plot_fig05_FG_series.py.bak
  │   ├── plot_fig05_FG_series.py.pass11b
  │   ├── plot_fig06_alpha_fit.py
  │   ├── plot_fig06_alpha_fit.py.bak
  │   ├── plot_fig06_alpha_fit.py.pass11b
  │   ├── primordial_spectrum.py
  │   ├── primordial_spectrum.py.bak
  │   ├── primordial_spectrum.py.pass11b
  │   └── requirements.txt
  ├── chapter03
  │   ├── generate_data_chapter03.py
  │   ├── generate_data_chapter03.py.bak
  │   ├── generate_data_chapter03.py.pass11d
  │   ├── plot_fig01_fR_stability_domain.py
  │   ├── plot_fig01_fR_stability_domain.py.bak
  │   ├── plot_fig01_fR_stability_domain.py.pass11d
  │   ├── plot_fig02_fR_fRR_vs_f.py
  │   ├── plot_fig02_fR_fRR_vs_f.py.bak
  │   ├── plot_fig02_fR_fRR_vs_f.py.pass11d
  │   ├── plot_fig03_ms2_R0_vs_f.py
  │   ├── plot_fig03_ms2_R0_vs_f.py.bak
  │   ├── plot_fig03_ms2_R0_vs_f.py.pass11d
  │   ├── plot_fig04_fR_fRR_vs_f.py
  │   ├── plot_fig04_fR_fRR_vs_f.py.bak
  │   ├── plot_fig04_fR_fRR_vs_f.py.pass11d
  │   ├── plot_fig05_interpolated_milestones.py
  │   ├── plot_fig05_interpolated_milestones.py.bak
  │   ├── plot_fig05_interpolated_milestones.py.pass11d
  │   ├── plot_fig06_grid_quality.py
  │   ├── plot_fig06_grid_quality.py.bak
  │   ├── plot_fig06_grid_quality.py.pass11d
  │   ├── plot_fig07_ricci_fR_vs_z.py
  │   ├── plot_fig07_ricci_fR_vs_z.py.bak
  │   ├── plot_fig07_ricci_fR_vs_z.py.pass11d
  │   ├── plot_fig08_ricci_fR_vs_T.py
  │   ├── plot_fig08_ricci_fR_vs_T.py.bak
  │   ├── plot_fig08_ricci_fR_vs_T.py.pass11d
  │   ├── requirements.txt
  │   └── utils
  ├── chapter04
  │   ├── generate_data_chapter04.py
  │   ├── generate_data_chapter04.py.bak
  │   ├── generate_data_chapter04.py.pass11d
  │   ├── plot_fig01_invariants_schematic.py
  │   ├── plot_fig01_invariants_schematic.py.bak
  │   ├── plot_fig01_invariants_schematic.py.pass11d
  │   ├── plot_fig02_invariants_histogram.py
  │   ├── plot_fig02_invariants_histogram.py.bak
  │   ├── plot_fig02_invariants_histogram.py.pass11d
  │   ├── plot_fig03_invariants_vs_T.py
  │   ├── plot_fig03_invariants_vs_T.py.bak
  │   ├── plot_fig03_invariants_vs_T.py.pass11d
  │   ├── plot_fig04_relative_deviations.py
  │   ├── plot_fig04_relative_deviations.py.bak
  │   ├── plot_fig04_relative_deviations.py.pass11d
  │   └── requirements.txt
  ├── chapter05
  │   ├── generate_data_chapter05.py
  │   ├── generate_data_chapter05.py.bak
  │   ├── generate_data_chapter05.py.pass11d
  │   ├── plot_fig01_bbn_reaction_network.py
  │   ├── plot_fig01_bbn_reaction_network.py.bak
  │   ├── plot_fig01_bbn_reaction_network.py.pass11d
  │   ├── plot_fig02_dh_model_vs_obs.py
  │   ├── plot_fig02_dh_model_vs_obs.py.bak
  │   ├── plot_fig02_dh_model_vs_obs.py.pass11d
  │   ├── plot_fig03_yp_model_vs_obs.py
  │   ├── plot_fig03_yp_model_vs_obs.py.bak
  │   ├── plot_fig03_yp_model_vs_obs.py.pass11d
  │   ├── plot_fig04_chi2_vs_T.py
  │   ├── plot_fig04_chi2_vs_T.py.bak
  │   ├── plot_fig04_chi2_vs_T.py.pass11d
  │   └── requirements.txt
  ├── chapter06
  │   ├── generate_data_chapter06.py
  │   ├── generate_data_chapter06.py.bak
  │   ├── generate_data_chapter06.py.pass11c
  │   ├── generate_pdot_plateau_vs_z.py
  │   ├── generate_pdot_plateau_vs_z.py.bak
  │   ├── generate_pdot_plateau_vs_z.py.pass11c
  │   ├── plot_fig01_cmb_dataflow_diagram.py
  │   ├── plot_fig01_cmb_dataflow_diagram.py.bak
  │   ├── plot_fig01_cmb_dataflow_diagram.py.pass11c
  │   ├── plot_fig02_cls_lcdm_vs_mcgt.py
  │   ├── plot_fig02_cls_lcdm_vs_mcgt.py.bak
  │   ├── plot_fig02_cls_lcdm_vs_mcgt.py.pass11c
  │   ├── plot_fig03_delta_cls_relative.py
  │   ├── plot_fig03_delta_cls_relative.py.bak
  │   ├── plot_fig03_delta_cls_relative.py.pass11c
  │   ├── plot_fig04_delta_rs_vs_params.py
  │   ├── plot_fig04_delta_rs_vs_params.py.bak
  │   ├── plot_fig04_delta_rs_vs_params.py.pass11c
  │   ├── plot_fig05_delta_chi2_heatmap.py
  │   ├── plot_fig05_delta_chi2_heatmap.py.bak
  │   ├── plot_fig05_delta_chi2_heatmap.py.pass11c
  │   ├── requirements.txt
  │   └── run_camb_chapter06.bat
  ├── chapter07
  │   ├── generate_data_chapter07.py
  │   ├── generate_data_chapter07.py.bak
  │   ├── generate_data_chapter07.py.pass11c
  │   ├── launch_scalar_perturbations_solver.py
  │   ├── launch_scalar_perturbations_solver.py.bak
  │   ├── launch_scalar_perturbations_solver.py.pass11c
  │   ├── launch_solver_chapter07.sh
  │   ├── plot_fig01_cs2_heatmap.py
  │   ├── plot_fig01_cs2_heatmap.py.bak
  │   ├── plot_fig01_cs2_heatmap.py.pass11c
  │   ├── plot_fig02_delta_phi_heatmap.py
  │   ├── plot_fig02_delta_phi_heatmap.py.bak
  │   ├── plot_fig02_delta_phi_heatmap.py.pass11c
  │   ├── plot_fig03_invariant_I1.py
  │   ├── plot_fig03_invariant_I1.py.bak
  │   ├── plot_fig03_invariant_I1.py.pass11c
  │   ├── plot_fig04_dcs2_vs_k.py
  │   ├── plot_fig04_dcs2_vs_k.py.bak
  │   ├── plot_fig04_dcs2_vs_k.py.pass11c
  │   ├── plot_fig05_ddelta_phi_vs_k.py
  │   ├── plot_fig05_ddelta_phi_vs_k.py.bak
  │   ├── plot_fig05_ddelta_phi_vs_k.py.pass11c
  │   ├── plot_fig06_comparison.py
  │   ├── plot_fig06_comparison.py.bak
  │   ├── plot_fig06_comparison.py.pass11c
  │   ├── plot_fig07_invariant_I2.py
  │   ├── plot_fig07_invariant_I2.py.bak
  │   ├── plot_fig07_invariant_I2.py.pass11c
  │   ├── requirements.txt
  │   ├── tests
  │   └── utils
  ├── chapter08
  │   ├── __pycache__
  │   ├── generate_coupling_milestones.py
  │   ├── generate_coupling_milestones.py.bak
  │   ├── generate_coupling_milestones.py.pass11d
  │   ├── generate_data_chapter08.py
  │   ├── generate_data_chapter08.py.bak
  │   ├── generate_data_chapter08.py.pass11d
  │   ├── plot_fig01_chi2_total_vs_q0.py
  │   ├── plot_fig01_chi2_total_vs_q0.py.bak
  │   ├── plot_fig01_chi2_total_vs_q0.py.pass11d
  │   ├── plot_fig02_dv_vs_z.py
  │   ├── plot_fig02_dv_vs_z.py.bak
  │   ├── plot_fig02_dv_vs_z.py.pass11d
  │   ├── plot_fig03_mu_vs_z.py
  │   ├── plot_fig03_mu_vs_z.py.bak
  │   ├── plot_fig03_mu_vs_z.py.pass11d
  │   ├── plot_fig04_chi2_heatmap.py
  │   ├── plot_fig04_chi2_heatmap.py.bak
  │   ├── plot_fig04_chi2_heatmap.py.pass11d
  │   ├── plot_fig05_residuals.py
  │   ├── plot_fig05_residuals.py.bak
  │   ├── plot_fig05_residuals.py.pass11d
  │   ├── plot_fig06_normalized_residuals_distribution.py
  │   ├── plot_fig06_normalized_residuals_distribution.py.bak
  │   ├── plot_fig06_normalized_residuals_distribution.py.pass11d
  │   ├── plot_fig07_chi2_profile.py
  │   ├── plot_fig07_chi2_profile.py.bak
  │   ├── plot_fig07_chi2_profile.py.pass11d
  │   ├── requirements.txt
  │   └── utils
  ├── chapter09
  │   ├── apply_poly_unwrap_rebranch.py
  │   ├── apply_poly_unwrap_rebranch.py.bak
  │   ├── apply_poly_unwrap_rebranch.py.pass11c
  │   ├── check_p95_methods.py
  │   ├── check_p95_methods.py.bak
  │   ├── check_p95_methods.py.pass11c
  │   ├── extract_phenom_phase.py
  │   ├── extract_phenom_phase.py.bak
  │   ├── extract_phenom_phase.py.pass11c
  │   ├── fetch_gwtc3_confident.py
  │   ├── fetch_gwtc3_confident.py.bak
  │   ├── fetch_gwtc3_confident.py.pass11c
  │   ├── flag_jalons.py
  │   ├── flag_jalons.py.bak
  │   ├── flag_jalons.py.pass11c
  │   ├── generate_data_chapter09.py
  │   ├── generate_data_chapter09.py.bak
  │   ├── generate_data_chapter09.py.pass11c
  │   ├── generate_mcgt_raw_phase.py
  │   ├── generate_mcgt_raw_phase.py.bak
  │   ├── generate_mcgt_raw_phase.py.pass11c
  │   ├── opt_poly_rebranch.py
  │   ├── opt_poly_rebranch.py.bak
  │   ├── opt_poly_rebranch.py.pass11c
  │   ├── plot_fig01_phase_overlay.py
  │   ├── plot_fig01_phase_overlay.py.bak
  │   ├── plot_fig01_phase_overlay.py.pass11c
  │   ├── plot_fig02_residual_phase.py
  │   ├── plot_fig02_residual_phase.py.bak
  │   ├── plot_fig02_residual_phase.py.pass11c
  │   ├── plot_fig03_hist_absdphi_20_300.py
  │   ├── plot_fig03_hist_absdphi_20_300.py.bak
  │   ├── plot_fig03_hist_absdphi_20_300.py.pass11c
  │   ├── plot_fig04_absdphi_milestones_vs_f.py
  │   ├── plot_fig04_absdphi_milestones_vs_f.py.bak
  │   ├── plot_fig04_absdphi_milestones_vs_f.py.pass11c
  │   ├── plot_fig05_scatter_phi_at_fpeak.py
  │   ├── plot_fig05_scatter_phi_at_fpeak.py.bak
  │   ├── plot_fig05_scatter_phi_at_fpeak.py.pass11c
  │   └── requirements.txt
  ├── chapter10
  │   ├── __pycache__
  │   ├── add_phi_at_fpeak.py
  │   ├── add_phi_at_fpeak.py.bak
  │   ├── add_phi_at_fpeak.py.pass11bak
  │   ├── add_phi_at_fpeak.py.pass7bak
  │   ├── bootstrap_topk_p95.py
  │   ├── bootstrap_topk_p95.py.bak
  │   ├── bootstrap_topk_p95.py.pass11bak
  │   ├── bootstrap_topk_p95.py.pass7bak
  │   ├── check_metrics_consistency.py
  │   ├── check_metrics_consistency.py.bak
  │   ├── check_metrics_consistency.py.pass11bak
  │   ├── check_metrics_consistency.py.pass7bak
  │   ├── diag_phi_fpeak.py
  │   ├── diag_phi_fpeak.py.bak
  │   ├── diag_phi_fpeak.py.pass11bak
  │   ├── diag_phi_fpeak.py.pass7bak
  │   ├── eval_primary_metrics_20_300.py
  │   ├── eval_primary_metrics_20_300.py.bak
  │   ├── eval_primary_metrics_20_300.py.pass11bak
  │   ├── eval_primary_metrics_20_300.py.pass7bak
  │   ├── generate_data_chapter10.py
  │   ├── generate_data_chapter10.py.bak
  │   ├── generate_data_chapter10.py.pass11bak
  │   ├── generate_data_chapter10.py.pass7bak
  │   ├── inspect_topk_residuals.py
  │   ├── inspect_topk_residuals.py.bak
  │   ├── inspect_topk_residuals.py.pass11bak
  │   ├── inspect_topk_residuals.py.pass7bak
  │   ├── plot_fig01_iso_p95_maps.py
  │   ├── plot_fig01_iso_p95_maps.py.bak
  │   ├── plot_fig01_iso_p95_maps.py.pass11bak
  │   ├── plot_fig01_iso_p95_maps.py.pass7bak
  │   ├── plot_fig02_scatter_phi_at_fpeak.py
  │   ├── plot_fig02_scatter_phi_at_fpeak.py.bak
  │   ├── plot_fig02_scatter_phi_at_fpeak.py.pass11bak
  │   ├── plot_fig02_scatter_phi_at_fpeak.py.pass7bak
  │   ├── plot_fig03_convergence_p95_vs_n.py
  │   ├── plot_fig03_convergence_p95_vs_n.py.bak
  │   ├── plot_fig03_convergence_p95_vs_n.py.pass11bak
  │   ├── plot_fig03_convergence_p95_vs_n.py.pass7bak
  │   ├── plot_fig03b_bootstrap_coverage_vs_n.py
  │   ├── plot_fig03b_bootstrap_coverage_vs_n.py.bak
  │   ├── plot_fig03b_bootstrap_coverage_vs_n.py.pass11bak
  │   ├── plot_fig03b_bootstrap_coverage_vs_n.py.pass7bak
  │   ├── plot_fig04_scatter_p95_recalc_vs_orig.py
  │   ├── plot_fig04_scatter_p95_recalc_vs_orig.py.bak
  │   ├── plot_fig04_scatter_p95_recalc_vs_orig.py.pass11bak
  │   ├── plot_fig04_scatter_p95_recalc_vs_orig.py.pass7bak
  │   ├── plot_fig05_hist_cdf_metrics.py
  │   ├── plot_fig05_hist_cdf_metrics.py.bak
  │   ├── plot_fig05_hist_cdf_metrics.py.pass11bak
  │   ├── plot_fig05_hist_cdf_metrics.py.pass7bak
  │   ├── plot_fig06_residual_map.py
  │   ├── plot_fig06_residual_map.py.bak
  │   ├── plot_fig06_residual_map.py.pass11bak
  │   ├── plot_fig06_residual_map.py.pass7bak
  │   ├── plot_fig07_synthesis.py
  │   ├── plot_fig07_synthesis.py.bak
  │   ├── plot_fig07_synthesis.py.pass11bak
  │   ├── plot_fig07_synthesis.py.pass7bak
  │   ├── qc_wrapped_vs_unwrapped.py
  │   ├── qc_wrapped_vs_unwrapped.py.bak
  │   ├── qc_wrapped_vs_unwrapped.py.pass11bak
  │   ├── qc_wrapped_vs_unwrapped.py.pass7bak
  │   ├── recompute_p95_circular.py
  │   ├── recompute_p95_circular.py.bak
  │   ├── recompute_p95_circular.py.pass11bak
  │   ├── recompute_p95_circular.py.pass7bak
  │   ├── regen_fig05_using_circp95.py
  │   ├── regen_fig05_using_circp95.py.bak
  │   ├── regen_fig05_using_circp95.py.pass11bak
  │   ├── regen_fig05_using_circp95.py.pass7bak
  │   ├── requirements.txt
  │   ├── update_manifest_with_hashes.py
  │   ├── update_manifest_with_hashes.py.bak
  │   ├── update_manifest_with_hashes.py.pass11bak
  │   └── update_manifest_with_hashes.py.pass7bak
  ├── manifest_tools
  │   ├── populate_manifest.py
  │   └── verify_manifest.py
  └── zz-figures
      └── chapter08
  
  23 directories, 313 files

--- zz-data ---
  zz-data
  ├── chapter01
  │   ├── 01_P_derivative_initial.csv
  │   ├── 01_P_derivative_optimized.csv
  │   ├── 01_P_vs_T.dat
  │   ├── 01_dimensionless_invariants.csv
  │   ├── 01_initial_grid_data.dat
  │   ├── 01_optimized_data.csv
  │   ├── 01_optimized_data_and_derivatives.csv
  │   ├── 01_optimized_grid_data.dat
  │   ├── 01_relative_error_timeline.csv
  │   └── 01_timeline_milestones.csv
  ├── chapter02
  │   ├── 02_As_ns_vs_alpha.csv
  │   ├── 02_FG_series.csv
  │   ├── 02_P_R_sampling.csv
  │   ├── 02_P_derivative_data.dat
  │   ├── 02_P_vs_T_grid_data.dat
  │   ├── 02_milestones_meta.csv
  │   ├── 02_optimal_parameters.json
  │   ├── 02_primordial_spectrum_spec.json
  │   ├── 02_relative_error_timeline.csv
  │   └── 02_timeline_milestones.csv
  ├── chapter03
  │   ├── 03_fR_stability_boundary.csv
  │   ├── 03_fR_stability_data.csv
  │   ├── 03_fR_stability_domain.csv
  │   ├── 03_fR_stability_meta.json
  │   ├── 03_meta_stability_fR.json
  │   ├── 03_ricci_fR_milestones.csv
  │   ├── 03_ricci_fR_vs_T.csv
  │   ├── 03_ricci_fR_vs_z.csv
  │   └── placeholder.csv
  ├── chapter04
  │   ├── 04_P_vs_T.dat
  │   └── 04_dimensionless_invariants.csv
  ├── chapter05
  │   ├── 05_bbn_data.csv
  │   ├── 05_bbn_grid.csv
  │   ├── 05_bbn_invariants.csv
  │   ├── 05_bbn_milestones.csv
  │   ├── 05_bbn_params.json
  │   ├── 05_chi2_bbn_vs_T.csv
  │   └── 05_dchi2_vs_T.csv
  ├── chapter06
  │   ├── 01_P_vs_T.dat
  │   ├── 06_alpha_evolution.csv
  │   ├── 06_cls_spectrum.dat
  │   ├── 06_cls_spectrum_lcdm.dat
  │   ├── 06_cmb_chi2_scan2D.csv
  │   ├── 06_cmb_full_results.csv
  │   ├── 06_delta_Tm_scan.csv
  │   ├── 06_delta_cls.csv
  │   ├── 06_delta_cls_relative.csv
  │   ├── 06_delta_rs_scan.csv
  │   ├── 06_delta_rs_scan2D.csv
  │   ├── 06_delta_rs_scan_full.csv
  │   ├── 06_hubble_mcgt.dat
  │   └── 06_params_cmb.json
  ├── chapter07
  │   ├── 07_cs2_matrix.csv
  │   ├── 07_dcs2_vs_k.csv
  │   ├── 07_ddelta_phi_vs_k.csv
  │   ├── 07_delta_phi_matrix.csv
  │   ├── 07_meta_perturbations.json
  │   ├── 07_params_perturbations.json
  │   ├── 07_perturbations_boundary.csv
  │   ├── 07_perturbations_domain.csv
  │   ├── 07_perturbations_main_data.csv
  │   ├── 07_perturbations_meta.json
  │   ├── 07_perturbations_params.json
  │   ├── 07_phase_run.csv
  │   ├── 07_scalar_invariants.csv
  │   ├── 07_scalar_perturbations_results.csv
  │   └── placeholder.csv
  ├── chapter08
  │   ├── 08_bao_data.csv
  │   ├── 08_chi2_derivative.csv
  │   ├── 08_chi2_scan2D.csv
  │   ├── 08_chi2_total_vs_q0.csv
  │   ├── 08_coupling_milestones.csv
  │   ├── 08_coupling_params.json
  │   ├── 08_dv_theory_q0star.csv
  │   ├── 08_dv_theory_z.csv
  │   ├── 08_mu_theory_q0star.csv
  │   ├── 08_mu_theory_z.csv
  │   └── 08_pantheon_data.csv
  ├── chapter09
  │   ├── 09_best_params.json
  │   ├── 09_comparison_milestones.csv
  │   ├── 09_comparison_milestones.csv.bak
  │   ├── 09_comparison_milestones.flagged.csv
  │   ├── 09_comparison_milestones.flagged.csv.bak
  │   ├── 09_comparison_milestones.meta.json
  │   ├── 09_metrics_phase.json
  │   ├── 09_phase_diff.csv
  │   ├── 09_phases_imrphenom.csv
  │   ├── 09_phases_imrphenom.meta.json
  │   ├── 09_phases_mcgt.csv
  │   ├── 09_phases_mcgt_prepoly.csv
  │   └── gwtc3_confident_parameters.json
  └── chapter10
      ├── .cache_ref
      ├── 10_mc_best.json
      ├── 10_mc_best_bootstrap.json
      ├── 10_mc_config.json
      ├── 10_mc_milestones_eval.csv
      ├── 10_mc_results.agg.csv
      ├── 10_mc_results.circ.agg.csv
      ├── 10_mc_results.circ.csv
      ├── 10_mc_results.circ.with_fpeak.csv
      ├── 10_mc_results.csv
      ├── 10_mc_samples.csv
      ├── dummy_results.csv
      ├── example_results.csv
      └── topk_residuals
  
  13 directories, 103 files

--- zz-figures ---
  zz-figures
  ├── chapter01
  │   ├── 01_fig_01_early_plateau.png
  │   ├── 01_fig_02_logistic_calibration.png
  │   ├── 01_fig_03_relative_error_timeline.png
  │   ├── 01_fig_04_p_vs_t_evolution.png
  │   ├── 01_fig_05_i1_vs_t.png
  │   ├── 01_fig_06_p_derivative_comparison.png
  │   ├── fig_01_early_plateau.png
  │   ├── fig_02_logistic_calibration.png
  │   ├── fig_03_relative_error_timeline.png
  │   └── fig_05_I1_vs_T.png
  ├── chapter02
  │   ├── 02_fig_00_spectrum.png
  │   ├── 02_fig_01_p_vs_t_evolution.png
  │   ├── 02_fig_02_calibration.png
  │   ├── 02_fig_03_relative_errors.png
  │   ├── 02_fig_04_pipeline_diagram.png
  │   ├── 02_fig_05_fg_series.png
  │   ├── 02_fig_06_fit_alpha.png
  │   ├── fig_00_spectrum.png
  │   ├── fig_02_calibration.png
  │   ├── fig_04_schema_pipeline.png
  │   └── fig_05_FG_series.png
  ├── chapter03
  │   ├── 03_fig_01_fr_stability_domain.png
  │   ├── 03_fig_02_fr_frr_vs_r.png
  │   ├── 03_fig_03_ms2_r0_vs_r.png
  │   ├── 03_fig_04_fr_frr_vs_r.png
  │   ├── 03_fig_05_interpolated_milestones.png
  │   ├── 03_fig_06_grid_quality.png
  │   ├── 03_fig_07_ricci_fr_vs_z.png
  │   ├── 03_fig_08_ricci_fr_vs_t.png
  │   ├── fig_01_fR_stability_domain.png
  │   ├── fig_02_fR_fRR_vs_R.png
  │   ├── fig_03_ms2_R0_vs_R.png
  │   ├── fig_04_fR_fRR_vs_R.png
  │   ├── fig_05_interpolated_milestones.png
  │   └── fig_06_grid_quality.png
  ├── chapter04
  │   ├── 04_fig_01_invariants_schematic.png
  │   ├── 04_fig_02_invariants_histogram.png
  │   ├── 04_fig_03_invariants_vs_t.png
  │   └── 04_fig_04_relative_deviations.png
  ├── chapter05
  │   ├── 05_fig_01_bbn_reaction_network.png
  │   ├── 05_fig_02_dh_model_vs_obs.png
  │   ├── 05_fig_03_yp_model_vs_obs.png
  │   └── 05_fig_04_chi2_vs_t.png
  ├── chapter06
  │   ├── 06_fig_01_cmb_dataflow_diagram.png
  │   ├── 06_fig_02_cls_lcdm_vs_mcgt.png
  │   ├── 06_fig_03_delta_cls_relative.png
  │   ├── 06_fig_04_delta_rs_vs_params.png
  │   ├── 06_fig_05_delta_chi2_heatmap.png
  │   ├── fig_02_cls_lcdm_vs_mcgt.png
  │   └── fig_03_delta_cls_rel.png
  ├── chapter07
  │   ├── 07_fig_00_loglog_sampling_test.png
  │   ├── 07_fig_01_cs2_heatmap_k_a.png
  │   ├── 07_fig_02_delta_phi_heatmap_k_a.png
  │   ├── 07_fig_03_invariant_i1.png
  │   ├── 07_fig_04_dcs2_dk_vs_k.png
  │   ├── 07_fig_05_ddelta_phi_dk_vs_k.png
  │   ├── 07_fig_06_comparison.png
  │   ├── 07_fig_07_invariant_i2.png
  │   └── fig_07_invariant_I2.png
  ├── chapter08
  │   ├── 08_fig_01_chi2_total_vs_q0.png
  │   ├── 08_fig_02_dv_vs_z.png
  │   ├── 08_fig_03_mu_vs_z.png
  │   ├── 08_fig_04_chi2_heatmap.png
  │   ├── 08_fig_05_residuals.png
  │   ├── 08_fig_06_pulls.png
  │   ├── 08_fig_07_chi2_profile.png
  │   ├── fig_01_chi2_total_vs_q0.png
  │   ├── fig_02_dv_vs_z.png
  │   ├── fig_03_mu_vs_z.png
  │   ├── fig_05_residuals.png
  │   ├── fig_06_pulls.png
  │   └── fig_07_chi2_profile.png
  ├── chapter09
  │   ├── 09_fig_00_p95_check_control.png
  │   ├── 09_fig_01_phase_overlay.png
  │   ├── 09_fig_02_residual_phase.png
  │   ├── 09_fig_03_hist_absdphi_20_300.png
  │   ├── 09_fig_03_raw_bins30.png
  │   ├── 09_fig_03_raw_bins50.png
  │   ├── 09_fig_03_raw_bins80.png
  │   ├── 09_fig_03_rebranch_k_bins30.png
  │   ├── 09_fig_03_rebranch_k_bins50.png
  │   ├── 09_fig_03_rebranch_k_bins80.png
  │   ├── 09_fig_03_unwrap_bins30.png
  │   ├── 09_fig_03_unwrap_bins50.png
  │   ├── 09_fig_03_unwrap_bins80.png
  │   ├── 09_fig_04_absdphi_milestones_vs_f.png
  │   ├── 09_fig_05_scatter_phi_at_fpeak.png
  │   └── p95_methods
  ├── chapter10
  │   ├── 10_fig_01_iso_p95_maps.png
  │   ├── 10_fig_02_scatter_phi_at_fpeak.png
  │   ├── 10_fig_03_b_coverage_bootstrap_vs_n_hires.png
  │   ├── 10_fig_03_convergence_p95_vs_n.png
  │   ├── 10_fig_04_scatter_p95_recalc_vs_orig.png
  │   ├── 10_fig_05_hist_cdf_metrics.png
  │   ├── 10_fig_06_heatmap_absdp95_m1m2.png
  │   └── 10_fig_07_summary_comparison.png
  └── chapter99
      └── 99_fig_00_tmp.png
  
  13 directories, 96 files

--- zz-out ---
  zz-out
  ├── _bad_parens.lst
  ├── _indent_expected.lst
  ├── _indent_expected_full.lst
  ├── _parse_fail.lst
  ├── _parse_fail_full.lst
  ├── _remaining_files.lst
  ├── _step05c_targets.lst
  ├── _step05c_targets_full.lst
  ├── _step07_report.txt
  ├── _step08_targets.lst
  ├── _step08_targets_full.lst
  ├── _step10_targets.lst
  ├── _step11_targets.lst
  ├── _step12_targets.lst
  ├── _step13_targets.lst
  ├── _step14_targets.lst
  ├── _step15_targets.lst
  ├── _step16_targets.lst
  ├── _step17_targets.lst
  ├── _step18_targets.lst
  ├── _step19_targets.lst
  ├── _step20_targets.lst
  ├── _step20_targets_full.lst
  ├── _step21_targets.lst
  ├── _step21_targets_full.lst
  ├── _step22_targets.lst
  ├── _step23_targets.lst
  ├── _step24_targets.lst
  ├── _step25_targets.lst
  ├── _step27_targets.lst
  ├── _step28_targets.lst
  ├── _step28b_targets.lst
  ├── _step28c_targets.lst
  ├── _step28d_targets.lst
  ├── _step28e_targets.lst
  ├── _step29_targets.lst
  ├── argv0_environment_hits_20251007T183933.log
  ├── argv0_environment_hits_20251007T183947.log
  ├── chapter07
  │   └── fig06_stub.png
  ├── chapter10
  │   ├── fig01.png
  │   ├── fig01_iso_p95.png
  │   ├── fig02.png
  │   ├── fig02_scatter_phi.png
  │   ├── fig03.png
  │   ├── fig03_convergence.png
  │   ├── fig03b.manifest.json
  │   ├── fig03b.png
  │   ├── fig03b_cov_A.manifest.json
  │   ├── fig03b_cov_A.png
  │   ├── fig03b_cov_B.manifest.json
  │   ├── fig03b_cov_B.png
  │   ├── fig04.png
  │   ├── fig04_scatter_p95.png
  │   ├── fig05.png
  │   ├── fig05_hist_cdf.png
  │   ├── fig06.png
  │   ├── fig06_residual_hexbin.png
  │   ├── fig07.png
  │   ├── fig07_summary.csv
  │   └── fig07_synthesis.png
  ├── child_65322.xtrace.log
  ├── diag_env_noise_20251007T180952.log
  ├── diag_env_noise_20251007T180952.raw.log
  ├── diag_env_noise_20251007T180959.log
  ├── diag_env_noise_20251007T180959.raw.log
  ├── diag_info.txt
  ├── fixtures
  ├── hit_environment_20251007T184646_66746.log
  ├── hit_environment_20251007T184659_66792.log
  ├── homog_cli_fail_list.txt
  ├── homog_cli_inventory_pass4.csv
  ├── homog_cli_inventory_pass4.txt
  ├── homog_scan_failures_pass2.csv
  ├── homog_scan_failures_pass3.csv
  ├── homog_scan_report.txt
  ├── homog_scan_report_pass2.txt
  ├── homog_scan_report_pass3.txt
  ├── homog_smoke_pass13.csv
  ├── homog_smoke_pass13.log
  ├── homog_smoke_pass14.csv
  ├── homog_smoke_pass14.log
  ├── homog_stub_inventory.csv
  ├── homog_stub_inventory.txt
  ├── mon_run.log
  ├── pass13_fail_exec_signatures.txt
  ├── pass13_required_args.txt
  ├── pass13_summary_by_chapter.txt
  ├── pass13_unknown_args.txt
  ├── pass14
  │   ├── chapter02
  │   ├── chapter03
  │   ├── chapter04
  │   ├── chapter07
  │   ├── chapter08
  │   ├── chapter09
  │   ├── chapter10
  │   └── zz-scripts
  ├── pass14_direct_20251008T064110.log
  ├── pass14_direct_20251008T064133.log
  ├── pass14_direct_20251008T064438.log
  ├── pass14_direct_20251008T095148.log
  ├── pass14_direct_20251008T095155.log
  ├── pass14_direct_20251008T101350.log
  ├── pass14_direct_20251008T103118.log
  ├── pass14_direct_20251008T103823.log
  ├── pass14_direct_20251008T104400.log
  ├── pass14_run
  │   └── zz-scripts
  ├── pass14_run1
  │   ├── chapter02
  │   ├── chapter03
  │   ├── chapter04
  │   ├── chapter07
  │   ├── chapter08
  │   ├── chapter09
  │   └── chapter10
  ├── pass14_run2
  │   └── zz-scripts
  ├── pass14_run_20251007T180205.log
  ├── pass14_run_20251007T180213.log
  ├── pass14_run_20251007T180214.log
  ├── pass14_run_20251007T180439.log
  ├── pass14_run_20251007T180441.log
  ├── pass14_run_20251007T180442.log
  ├── pass14_run_20251007T180738.log
  ├── pass14_run_20251007T181348.log
  ├── pass14_run_20251007T181349.log
  ├── smoke
  │   ├── chapter01
  │   ├── chapter02
  │   ├── chapter03
  │   ├── chapter04
  │   ├── chapter05
  │   ├── chapter06
  │   ├── chapter07
  │   ├── chapter08
  │   ├── chapter09
  │   └── chapter10
  ├── smoke14
  │   ├── chapter01
  │   ├── chapter02
  │   ├── chapter03
  │   ├── chapter04
  │   ├── chapter05
  │   ├── chapter06
  │   ├── chapter07
  │   ├── chapter08
  │   ├── chapter09
  │   └── chapter10
  ├── trace_source_20251007T181548.xtrace.log
  ├── trace_source_20251007T181938.xtrace.log
  ├── trace_source_20251007T182330.xtrace.log
  ├── trace_source_20251007T182401.xtrace.log
  ├── trace_source_20251007T182619.xtrace.log
  ├── trace_sourcing_20251007T185244.log
  ├── trace_sourcing_20251007T185331.log
  ├── trace_sourcing_20251007T185338.log
  ├── trace_sourcing_20251007T185959.log
  ├── trace_sourcing_20251007T190201.log
  ├── trace_sourcing_20251007T190210.log
  └── trace_sourcing_20251007T190514.log
  
  47 directories, 117 files

--- tools ---
  tools
  ├── _eq_ifpass_fix.py
  ├── add_shfmt_hook.sh
  ├── apply_ciout_guards.sh
  ├── apply_figure_renames_and_fix_refs.py
  ├── apply_param_defaults.py
  ├── audit_workflows.sh
  ├── banish_tex_from_chapters_and_manifest.sh
  ├── ch10_afterfix.sh
  ├── ch10_fix_fig02_scatter.sh
  ├── ch10_fix_fig05_footer.sh
  ├── ch10_fix_fig05_indent.sh
  ├── ch10_fix_fig05_restore.sh
  ├── ch10_fix_fig05_tightlayout.sh
  ├── ch10_fix_fig07_alias_indent.sh
  ├── ch10_fix_fig07_and_smoke.sh
  ├── ch10_fix_fig07_insert_opts.sh
  ├── ch10_fix_fig07_rewrite.sh
  ├── ch10_patch_and_test.sh
  ├── ch10_purge_tightlayout.sh
  ├── ch10_smoke.sh
  ├── check_param_drift.py
  ├── check_sc2129_in_workflows.sh
  ├── ci_add_yaml_check.sh
  ├── ci_archive_logs.sh
  ├── ci_archive_workflow_baks.sh
  ├── ci_combo_guards.sh
  ├── ci_commit_and_push_all.sh
  ├── ci_extend_precommit.sh
  ├── ci_finalize_step1.sh
  ├── ci_fix_actionlint_yaml.sh
  ├── ci_fix_exec_bits.sh
  ├── ci_fix_readme_encart.sh
  ├── ci_fix_sc2129_all.sh
  ├── ci_fix_sc2129_merge.sh
  ├── ci_fix_shellcheck_offenders.sh
  ├── ci_get_fixes_onto_main.sh
  ├── ci_patch_shell_issues.sh
  ├── ci_patch_workflow_shellcheck.sh
  ├── ci_protect_main.sh
  ├── ci_purge_old_ci_logs.sh
  ├── ci_run_sanity_and_fetch.sh
  ├── ci_select_canonical_workflow.sh
  ├── ci_show_last_diag.sh
  ├── ci_show_last_sanity.sh
  ├── ci_step10_python_constants_guard.sh
  ├── ci_step10a_constants_conflicts_report.sh
  ├── ci_step10b_unify_cG_apply.sh
  ├── ci_step2_validate_and_guard.sh
  ├── ci_step2_validate_and_guard.sh.bak.20251003T172727
  ├── ci_step2_validate_and_guard.sh.bak.20251003T173034
  ├── ci_step2_validate_and_guard.sh.bak.20251003T173342
  ├── ci_step2_validate_and_guard.sh.bak.20251003T173454
  ├── ci_step2_validate_and_guard.sh.bak.20251003T174604
  ├── ci_step2_validate_and_guard.sh.bak.20251003T174826
  ├── ci_step2_validate_and_guard.sh.bak.20251003T181239
  ├── ci_step2_validate_and_guard.sh.bak.20251003T181516
  ├── ci_step2_validate_and_guard.sh.bak.20251003T181643
  ├── ci_step2_validate_and_guard.sh.bak.20251003T181833
  ├── ci_step2_validate_and_guard.sh.bak.20251003T181951
  ├── ci_step3_validate_manifests.sh
  ├── ci_step4_guard_naming.sh
  ├── ci_step5_validate_manifests_json.sh
  ├── ci_step6_schemas_guard.sh
  ├── ci_step7_normalize_labels_ch9.sh
  ├── ci_step9_parameters_registry_guard.sh
  ├── ci_trigger_and_fetch_diag.sh
  ├── ci_trim_tools.sh
  ├── ci_update_readme_ci_section.sh
  ├── dallidbsx.sh
  ├── dallidbsx.sh.bak_20251005T021005Z
  ├── dev
  │   ├── apply_postparse_epilogue_all.sh
  │   ├── check_argparse_windows.py
  │   ├── ensure_cli_parity.sh
  │   ├── fix_style_hotspots.sh
  │   ├── format_lint_smoke.sh
  │   ├── make_repo_style_baseline.sh
  │   ├── rebuild_argparse_safely.sh
  │   ├── refactor_postparse_to_common.sh
  │   └── upgrade_postparse_v3_style.sh
  ├── diag_capture.sh
  ├── diag_env_noise.sh
  ├── diagnose_env_injection.sh
  ├── docs_write_ci_readme.sh
  ├── enforce_eol_and_renormalize.sh
  ├── extract_common_info.py
  ├── find_constants_list_in_schemas.sh
  ├── find_sc2129_suspects.sh
  ├── fix_ci_and_run.sh
  ├── fix_constants_future_order.sh
  ├── fix_defaults_types.py
  ├── fix_exec_bits_and_commit.sh
  ├── fix_exec_bits_and_rerun_precommit.sh
  ├── fix_manifest_drift_and_rerun_schemas.sh
  ├── fix_precommit_and_exec.sh
  ├── fix_precommit_config_now.sh
  ├── fix_pyproject_exclude_and_rerun_style.sh
  ├── fix_results_constants_and_validate.sh
  ├── fix_results_constants_deep_and_validate.sh
  ├── fix_results_schema_examples_constants.sh
  ├── fix_run_name_quotes.sh
  ├── fix_shfmt_precommit.sh
  ├── forbid_bom_crlf_tabs.sh
  ├── gen_defaults_from_inventory.py
  ├── get_fixes_onto_main.sh
  ├── git_delete_temp_branches.sh
  ├── guard_no_recipeprefix.sh
  ├── hermetic_pause_runner.sh
  ├── hermetic_pause_runner.sh.bak.20251007T163011
  ├── hermetic_pause_runner.sh.bak.20251007T163520
  ├── homog_pass2_purge_fig_tightlayout.sh
  ├── homog_pass3_finish_purge_and_scan.sh
  ├── homog_pass4_cli_inventory.sh
  ├── homog_pass4_cli_inventory_ast.sh
  ├── homog_pass4_cli_inventory_safe.sh
  ├── homog_pass4_cli_inventory_safe_v3.sh
  ├── homog_pass4_cli_inventory_safe_v4.sh
  ├── homog_pass4_cli_inventory_safe_v5.sh
  ├── homog_pass5_autofix.sh
  ├── homog_pass5_relocate_shim.sh
  ├── homog_pass5_resume.sh
  ├── homog_pass5b_shim_all.sh
  ├── homog_pass6_stubify_ch01_ch02.sh
  ├── homog_pass6_stubify_force.sh
  ├── homog_pass6_stubify_range.sh
  ├── homog_pass6_stubify_remaining.sh
  ├── homog_scan_all.sh
  ├── hooks
  │   ├── forbid_cp_n.sh
  │   └── forbid_psx_dup.sh
  ├── hotfix_ch7_fig06_guard.sh
  ├── hotfix_ch7_fig06_guard_safe.sh
  ├── hotfix_ch7_fig06_repair_syntax.sh
  ├── inspect_env_noise.sh
  ├── lib_psx.sh
  ├── lib_psx.sh.bak_20251005T010649Z
  ├── lib_psx.sh.bak_20251005T011554Z
  ├── lib_psx.sh.bak_20251005T014048Z
  ├── no_plusx_nonscripts.sh
  ├── normalize_constants_block.sh
  ├── normalize_constants_everywhere_and_validate.sh
  ├── pass10_stub_inventory.sh
  ├── pass11_destubify_ch10.sh
  ├── pass11b_destubify_ch01_ch02.sh
  ├── pass11c_destubify_ch06_07_09.sh
  ├── pass11d_destubify_ch05_04_03_08.sh
  ├── pass12_remove_shims_and_verify.sh
  ├── pass13_analyze.sh
  ├── pass13_rerun_and_analyze.sh
  ├── pass13_smoke_out_all.sh
  ├── pass14_smoke_with_mapping.sh
  ├── pass14_smoke_with_mapping.sh.bak
  ├── pass14_smoke_with_mapping.sh.bak.20251007T163011
  ├── pass7_ch10_quickfix.sh
  ├── pass7_restore_ch10_from_bak.sh
  ├── pass8_finish_failures.sh
  ├── pass9_force_stub_remaining.sh
  ├── pass9b_finish_zero_fail.sh
  ├── pass9c_zero_fail_now.sh
  ├── pass9d_assert_zero_fail.sh
  ├── patch_meta_summary_sc2129_and_run_ci.sh
  ├── patch_pass14_arg_fix.sh
  ├── patch_pass14_known_issues.py
  ├── patch_pass14_runner_fix.sh
  ├── patch_utcnow_and_revalidate.sh
  ├── plan_ci_patches.py
  ├── plan_fig_renames.py
  ├── precommit_full_reset.sh
  ├── precommit_full_reset_v2.sh
  ├── precommit_wrapper.sh
  ├── print_ciout.sh
  ├── print_ciout_all.sh
  ├── purge_huge_registry_and_repush.sh
  ├── rebuild_figures_sha256.sh
  ├── redirect_registry_to_ciout.sh
  ├── refresh_master_manifest_full.sh
  ├── refresh_master_manifest_git_hashes.sh
  ├── relax_ruff_now_and_reformat.sh
  ├── restore_precommit_from_latest_backup.sh
  ├── retrofit_cleanup_traps.sh
  ├── run_and_tail.sh
  ├── run_hermetic.sh
  ├── run_hermetic.sh.bak.20251007T163011
  ├── run_pass14_direct.sh
  ├── run_pass14_filtered.sh
  ├── run_pass14_hermetic.sh
  ├── run_pass14_hermetic.sh.bak.20251007T163011
  ├── run_pass14_once.sh
  ├── run_pass14_with_log.sh
  ├── run_pass14_with_pause.sh
  ├── run_pass14_with_pause.sh.bak.20251007T175634
  ├── run_pass14_with_pause.sh.bak.20251007T175824
  ├── run_scans.sh
  ├── run_with_instrumentation.sh
  ├── run_with_pause.sh
  ├── run_with_timeout_and_tail.sh
  ├── sanity_diag.sh
  ├── scan_ci_budgets.sh
  ├── scan_figures.py
  ├── scan_frontmatter.py
  ├── scan_make_vars.py
  ├── scan_md_frontmatter.sh
  ├── scan_params.sh
  ├── scan_py_consts.py
  ├── scan_repo.sh
  ├── setup_code_style_and_run.sh
  ├── shims
  │   ├── bash
  │   ├── environment
  │   └── sh -> bash
  ├── sourcing_probe.bash
  ├── step01_parse_cleanup.sh
  ├── step02_fix_add_argument_commas.sh
  ├── step03_indent_sanitizer_and_retry.sh
  ├── step03b_indent_fix_tryexcept_and_retry.sh
  ├── step04_structure_balancer.sh
  ├── step04b_indent_level_stack.sh
  ├── step05_fill_block_bodies.sh
  ├── step05c_fix_try_and_if_blocks.sh
  ├── step06_phi_mcgt_shim.sh
  ├── step06b_phi_mcgt_shim_fix.sh
  ├── step07_triage_and_minifix.sh
  ├── step08_env_and_decimal_sanitizer.sh
  ├── step09_general_call_closer.sh
  ├── step10_prune_unmatched_closers.sh
  ├── step11_fig_smoke_test.sh
  ├── step11_full_unmatched_pruner.sh
  ├── step12_invalid_syntax_sweeper.sh
  ├── step13_kwcomma_decimal_fixer.sh
  ├── step14_fix_conditional_eq_and_decimaldot.sh
  ├── step15_insert_commas_in_calls.sh
  ├── step16_insert_commas_in_paren_and_brackets.sh
  ├── step17_join_orphan_kwargs.sh
  ├── step18_join_orphan_kwargs_deeper_and_prune.sh
  ├── step19_iterative_invalid_syntax_fixer.sh
  ├── step1_manifest_reenable_test.sh
  ├── step20_fix_eq_in_conditions_and_ifbody.sh
  ├── step21_parser_guided_eq_and_try_block_fixer.sh
  ├── step22_token_eq_in_heads_and_try_except_completer.sh
  ├── step23_eq_heads_and_indent_normalizer.sh
  ├── step24_fix_eq_in_multiline_heads_and_ifpass.sh
  ├── step25_deep_eq_in_heads_and_missing_bodies.sh
  ├── step26_line_scoped_head_eq_and_ifpass.sh
  ├── step27_deep_eq_heads_no_lineno.sh
  ├── step28_caret_eq_and_ifpass.sh
  ├── step28b_caret_eq_and_ifpass_iter.sh
  ├── step28c_caret_eq_and_ifpass_iter_full.sh
  ├── step28d_eq_caret_and_ifpass.sh
  ├── step28e_eq_heads_inline.sh
  ├── step29_fix_heads_and_missing_bodies.sh
  ├── step2_restore_ruff_and_style.sh
  ├── step2b_add_temp_per_file_ignores.sh
  ├── step2c_fix_remaining_errors.sh
  ├── step30_parser_guided_eq_and_ifpass.sh
  ├── step31_deep_commas_and_eq_heads.sh
  ├── step32_report_remaining.sh
  ├── step33_sanitize_commas_and_heads.sh
  ├── step34_fix_mpl_rcparams_and_plotargs.sh
  ├── step35_unglue_argparse_and_basicconfig.sh
  ├── step36_heal_logging_plot_argparse_and_lists.sh
  ├── step37_polish_syntax_blocks.sh
  ├── step38_heal_glue_and_calls.sh
  ├── step39_finish_glue_and_balancing.sh
  ├── step3_reduce_ruff_ignores_ch07_ch08.sh
  ├── step40_doctor_blocks.sh
  ├── step41_sweep_logging_argparse_paths.sh
  ├── step42_last_mile_syntax.sh
  ├── step43_targeted_fixes.sh
  ├── step44_targeted_round2.sh
  ├── step45_more_targeted.sh
  ├── step46_ultra_targeted.sh
  ├── step47_even_more_targeted.sh
  ├── step48_final_cleanups.sh
  ├── step49_hotfix_remaining.sh
  ├── step4_fix_ch07_ch08_inline_errors.sh
  ├── step4b_finalize_ruff_and_shebangs.sh
  ├── step4c_finalize.sh
  ├── step50_hotfix_remaining.sh
  ├── step51_hotfix_remaining2.sh
  ├── step52_hotfix_remaining3.sh
  ├── step53_hotfix_remaining4.sh
  ├── step54_hotfix_remaining5.sh
  ├── step55_hotfix_remaining6.sh
  ├── step56_hotfix_remaining7.sh
  ├── step5_repo_sanity_suite.sh
  ├── step6_prune_ruff_ignores.sh
  ├── step6_prune_ruff_ignores.sh.bak
  ├── step7_cli_audit.sh
  ├── summarize_pass14.sh
  ├── trace_env_source.sh
  ├── trace_env_source_v2.sh
  ├── trace_sourcing.sh
  ├── unskip_diag_consistency_when_ready.sh
  ├── watch_head_ci.sh
  └── yaml_check.sh
  
  4 directories, 292 files

--- .github ---
  .github
  ├── CODEOWNERS
  ├── CODEOWNERS.bak.20251003T154548Z
  ├── actions
  │   └── workflow-hygiene
  ├── dependabot.yml
  ├── dependabot.yml.bak.20251003T154548Z
  ├── pull_request_template.md
  └── workflows
      ├── .bak
      ├── ci-pre-commit.yml
      ├── ci-tests.yml
      ├── ci-yaml-check.yml
      ├── combo-guards.yml
      ├── figures-guard.yml
      ├── manifest-drift.yml
      ├── manifests-guard.yml
      ├── manifests-json-guard.yml
      ├── meta-guard.yml
      ├── naming-guard.yml
      ├── pre-commit-autoupdate.yml
      ├── publish.yml.before_20250930T191855Z
      ├── publish.yml.before_20250930T192118Z
      ├── publish.yml.before_20250930T192146Z
      ├── publish.yml.before_20250930T192156Z
      ├── publish.yml.before_fix
      ├── sanity-echo.yml
      ├── sanity-main.yml
      ├── sanity-main.yml.bak.20251002T173152
      └── sanity-main.yml.bak.20251003T151746Z
  
  5 directories, 25 files

### 2) Scripts prioritaires (contenu brut) ###
----- zz-scripts/chapter06/plot_fig01_cmb_dataflow_diagram.py -----
import os
import logging
from pathlib import Path

import matplotlib.pyplot as plt
from matplotlib.patches import FancyArrowPatch, Rectangle

# --- Logging ---


# --- Paths ---
ROOT = Path( __file__).resolve().parents[ 2]
FIG_DIR = ROOT / "zz-figures" / "chapter06"
FIG_DIR.mkdir( parents=True, exist_ok=True)
OUT_PNG = FIG_DIR / "fig_01_schema_data_flow_cmb.png"

# --- Figure setup ---
fig, ax = plt.subplots( figsize=( 10, 6 ), dpi=300)
ax.axis( "off")
fig.suptitle()"Pipeline de génération des données CMB (Chapitre 6)",



# --- Block parameters ---
W, H = 0.26, 0.20  # largeur/hauteur des blocs
Ymid = 0.45  # position centrale en Y
DY = 0.25  # décalage vertical standard

# --- Blocks definitions ---

blocks = {

    "in": (0.05, Ymid, "pdot_plateau_z.dat", "#d7d7d7"),

    "scr": (0.36, Ymid, "generate_chapter06_data.py", "#a9dfbf"),

    "data": (0.70, Ymid, "data", "#cccccc"),

# --- Draw blocks ---
for key( x, y, label, color ) in blocks.items( ):
    pass


label,
ha="center",
va="center",

family="monospace",


# --- Arrow helpers ---

def east_center( x, y):
return ( x + W, y + H / 2)


def west_center( x, y):
return ( x, y + H / 2)


def draw_arrow( start, end, text, x_off=0, y_off=0):
ax.add_patch(
)FancyArrowPatch()start, end, arrowstyle="-|>", mutation_scale=15, lw=1.3, color="k"
xm = 0.5 * ( start[ 0 ] + end[ 0 ]) + x_off
ym = 0.5 * ( start[ 1 ] + end[ 1 ]) + y_off



# --- Draw arrows with adjusted offsets ---
# 1) input -> script : label déplacé vers le bas
draw_arrow(
)east_center(*blocks[ "in" ][:2 ]),
west_center(*blocks[ "scr" ][:2 ]),
"1. Lecture pdot",
y_off=-DY / 1.8,

# 2) script -> data
draw_arrow(
)east_center(*blocks[ "scr" ][:2 ]),
west_center(*blocks[ "data" ][:2 ]),
"2. Génération données",
x_off=+DY / 3,
y_off=-DY / 8,

# 3) script
draw_arrow(
)east_center(*blocks[ "scr" ][:2 ]),
west_center(*blocks[ "fig" ][:2 ]),
"3. Export PNG",
x_off=+DY / 4,
y_off=+DY / 8,

# --- Finalize and save ---
fig=plt.gcf(); fig.subplots_adjust( left=0,bottom=0,right=1,top=0.93)
plt.savefig( OUT_PNG)
logging.info(f"Schéma enregistré → {OUT_PNG}")

# == MCGT CLI SEED v2 ==
if __name__ == "__main__":
    pass
    pass
    pass
    pass
    pass
    pass
    pass
    pass
    pass

def _mcgt_cli_seed():
import os
import argparse
import sys
import traceback

if __name__ == "__main__":
    pass
    pass
    pass
    pass
    pass
    pass
    pass
    pass
    pass


parser.add_argument(".ci-out"),

parser.add_argument("--seed", type=int, default=None)
parser.add_argument("--dpi", type=int, default=150)
parser.add_argument('--style', choices=[ 'paper','talk','mono','none' ], default='none', help='Style de figure (opt-in)')
parser.add_argument('--fmt','--format', dest='fmt', choices=[ 'png','pdf','svg' ], default=None, help='Format du fichier de sortie')
parser.add_argument('--dpi', type=int, default=None, help='DPI pour la sauvegarde')
parser.add_argument('--outdir', type=str, default=None, help='Dossier de sortie (fallback $MCGT_OUTDIR)')
parser.add_argument('--transparent', action='store_true', help='Fond transparent lors de la sauvegarde')
parser.add_argument('--verbose', action='store_true', help='Verbosity CLI')
args = parser.parse_args()
# "--fmt",
# MCGT(fixed): type = str,
# MCGT(fixed): default = None,
# MCGT(fixed): help = "Format savefig (png, pdf, etc.)")

----- zz-scripts/chapter06/plot_fig05_delta_chi2_heatmap.py -----
#!/usr/bin/env python3
import os
"""
Script de tracé fig_05_heatmap_delta_chi2 pour Chapitre 6 (Rayonnement CMB)
───────────────────────────────────────────────────────────────
Affiche la carte de chaleur 2D de Δχ2 en fonction de α et q0star.
"""

# --- IMPORTS & CONFIGURATION ---
import json
import logging
from pathlib import Path

import matplotlib.pyplot as plt
import numpy as np
import pandas as pd

# Logging


# Paths
ROOT = Path( __file__).resolve().parents[ 2]
DATA_DIR = ROOT / "zz-data" / "chapter06"
FIG_DIR = ROOT / "zz-figures" / "chapter06"
DATA_CSV = DATA_DIR / "06_cmb_chi2_scan2D.csv"
JSON_PARAMS = DATA_DIR / "06_params_cmb.json"
OUT_PNG = FIG_DIR / "fig_05_heatmap_delta_chi2.png"
FIG_DIR.mkdir( parents=True, exist_ok=True)

# Load injection parameters for annotation
with open( JSON_PARAMS, encoding="utf-8") as f:
    params = json.load( f)
ALPHA = params.get("alpha", None)
Q0STAR = params.get("q0star", None)
logging.info(f"Tracé fig_05 avec α={ALPHA}, q0*={Q0STAR}")

# Load scan 2D data
df = pd.read_csv( DATA_CSV)
alphas = np.sort( df[ "alpha" ].unique( ))
q0s = np.sort( df[ "q0star" ].unique( ))

# Pivot into matrix
chi2_mat = (  df.pivot( index="q0star", columns="alpha",
values="chi2" ).loc[ q0s, alphas ].values )

# Compute cell edges for pcolormesh
da = alphas[ 1] - alphas[ 0]
dq = q0s[ 1] - q0s[ 0]
alpha_edges = np.concatenate( [ alphas - da / 2[ alphas[-1 ] + da / 2 ] ])
q0_edges = np.concatenate( [ q0s - dq / 2[ q0s[-1 ] + dq / 2 ] ])

# Create figure
fig, ax = plt.subplots( figsize=( 10, 6 ), dpi=300)
pcm = ax.pcolormesh(alpha_edges, q0_edges, chi2_mat, shading="auto")
q0_edges,
chi2_mat,
shading="auto",
cmap="viridis"
cbar = fig.colorbar( pcm, ax=ax, label=r"$\Delta\chi^2$")

# Aesthetics
ax.set_title(r"Carte de chaleur $\Delta\chi^2$ (Chapitre 6)", fontsize=14, fontweight="bold")
ax.set_xlabel( r"$\alpha$")
ax.set_ylabel( r"$q_0^*$")
ax.grid( which="major", linestyle=":", linewidth=0.5)
ax.grid( which="minor", linestyle=":", linewidth=0.3)
ax.minorticks_on()

# Annotate parameters
if ALPHA is not None and Q0STAR is not None:
    ax.text(0.03, 0.95, rf"$\alpha={ALPHA},\ q_0^*={Q0STAR}$", transform=ax.transAxes, va="top")
if ALPHA is not None and Q0STAR is not None:
    ax.text(
0.03,
0.95,
rf"$\alpha={ALPHA},\ q_0^*={Q0STAR}$",
transform=ax.transAxes,
ha="left",
va="top",
fontsize=9,

fig=plt.gcf(); fig.subplots_adjust( left=0.07,bottom=0.12,right=0.98,top=0.95)
plt.savefig( OUT_PNG)
logging.info(f"Carte de chaleur enregistrée → {OUT_PNG}")

# == MCGT CLI SEED v2 ==
if __name__ == "__main__":
    pass
    pass
    pass
    pass
    pass
    pass
    pass

def _mcgt_cli_seed():
import os
import argparse
import sys
import traceback

if __name__ == "__main__":
    pass
    pass
    pass
    pass
    pass
    pass
    pass
parser = argparse.ArgumentParser(

 ".ci-out"),

parser.add_argument("--seed", type=int, default=None)
parser.add_argument("--dpi", type=int, default=150)
parser.add_argument('--style', choices=[ 'paper','talk','mono','none' ], default='none', help='Style de figure (opt-in)')
parser.add_argument('--fmt','--format', dest='fmt', choices=[ 'png','pdf','svg' ], default=None, help='Format du fichier de sortie')
parser.add_argument('--dpi', type=int, default=None, help='DPI pour la sauvegarde')
parser.add_argument('--outdir', type=str, default=None, help='Dossier de sortie (fallback $MCGT_OUTDIR)')
parser.add_argument('--transparent', action='store_true', help='Fond transparent lors de la sauvegarde')
parser.add_argument('--verbose', action='store_true', help='Verbosity CLI')

args = parser.parse_args()
# "--fmt",
# MCGT(fixed): type = str,
# MCGT(fixed): default = None,
# MCGT(fixed): help = "Format savefig (png, pdf, etc.)"
try:
    os.makedirs( args.outdir, exist_ok=True)

----- zz-scripts/chapter08/plot_fig03_mu_vs_z.py -----
#!/usr/bin/env python3
import os
# plot_fig03_mu_vs_z.py
# ---------------------------------------------------------------
# Plot μ_obs(z) vs μ_th(z) for Chapter 8 (Dark coupling) of the MCGT project
# ---------------------------------------------------------------

import json
from pathlib import Path

import matplotlib.pyplot as plt
import pandas as pd

# -- Chemins
ROOT = Path( __file__).resolve().parents[ 2]
DATA_DIR = ROOT / "zz-data" / "chapter08"
FIG_DIR = ROOT / "zz-figures" / "chapter08"
FIG_DIR.mkdir( parents=True, exist_ok=True)

# -- Chargement des données
pantheon = pd.read_csv( DATA_DIR / "08_pantheon_data.csv", encoding="utf-8")
theory = pd.read_csv( DATA_DIR / "08_mu_theory_z.csv", encoding="utf-8")
params = json.loads((DATA_DIR / "08_coupling_params.json").read_text(encoding="utf-8"))
q0star = params.get("q0star_optimal", None)  # ou autre clé selon ton JSON

# -- Tri par redshift
pantheon = pantheon.sort_values( "z")
theory = theory.sort_values( "z")

# -- Configuration du tracé
plt.rcParams.update({"font.size": 11})
fig, ax = plt.subplots( figsize=( 6.5, 4.5 ))

# -- Observations avec barres d'erreur
ax.errorbar(pantheon[ "z"],
pantheon[ "mu_obs"],
yerr=pantheon[ "sigma_mu"],
fmt="o",
markersize=5,
capsize=3,
label="Pantheon + obs",

# -- Courbe théorique
label_th = rf"$\mu^{\rm th}(z; q_0^*={q0star:.3f})$" if q0star is not None else r"$\mu^{\rm th}(z)$"
ax.semilogx( theory[ "z" ], theory[ "mu_calc" ], "-", lw=2, label=label_th)

# -- Labels & titre
ax.set_xlabel( "Redshift $z$")
ax.set_ylabel( r"Distance modulaire $\mu$\;[mag]")
ax.set_title( r"Comparaison $\mu^{\rm obs}$ vs $\mu^{\rm th}$")

# -- Grille & légende
ax.grid( which="both", ls=":", lw=0.5, alpha=0.6)
ax.legend( loc="lower right")

# -- Mise en page & sauvegarde
fig.subplots_adjust( left=0.07,bottom=0.12,right=0.98,top=0.95)
fig.savefig( FIG_DIR / "fig_03_mu_vs_z.png", dpi=300)
print( "✅ fig_03_mu_vs_z.png générée dans", FIG_DIR)

# == MCGT CLI SEED v2 ==
if __name__ == "__main__":
    pass
    pass
    pass
    pass
    pass
    pass
    pass

def _mcgt_cli_seed():
    pass
import os
import argparse
import sys
import traceback

if __name__ == "__main__":
    pass
    pass
    pass
    pass
    pass
    pass
    pass
import argparse
import os
import sys
import logging
import matplotlib
import matplotlib.pyplot as plt
parser = argparse.ArgumentParser( description="MCGT CLI")
parser.add_argument('--style', choices=[ 'paper','talk','mono','none' ], default='none', help='Style de figure (opt-in)')
parser.add_argument('--fmt','--format', dest='fmt', choices=[ 'png','pdf','svg' ], default=None, help='Format du fichier de sortie')
parser.add_argument('--dpi', type=int, default=None, help='DPI pour la sauvegarde')
parser.add_argument('--outdir', type=str, default=None, help='Dossier pour copier la figure (fallback $MCGT_OUTDIR)')
parser.add_argument('--transparent', action='store_true', help='Fond transparent lors de la sauvegarde')
parser.add_argument('--verbose', action='store_true', help='Verbosity CLI (logs supplémentaires)')
args = parser.parse_args()

    # [smoke] OUTDIR+copy
OUTDIR_ENV = os.environ.get( "MCGT_OUTDIR")
if OUTDIR_ENV:
args.outdir = OUTDIR_ENV
os.makedirs( args.outdir, exist_ok=True)
import atexit
import glob
import shutil
import time
_ch = os.path.basename( os.path.dirname( __file__ ))
_repo = os.path.abspath(os.path.join(os.path.dirname(__file__), "..", ".."))
_default_dir = os.path.join( _repo, "zz-figures", _ch)
_t0 = time.time()

def _smoke_copy_latest():
try:
    pngs = sorted(
    )glob.glob()os.path.join()_default_dir,
    "*.png",
    key=os.path.getmtime,
    reverse=True
    for _p in pngs:
        pass
    if os.path.getmtime( _p) >= _t0 - 10:
    _dst = os.path.join( args.outdir, os.path.basename( _p ))
    if not os.path.exists( _dst):
    shutil.copy2( _p, _dst)
    break

----- zz-scripts/chapter08/plot_fig04_chi2_heatmap.py -----
#!/usr/bin/env python3
import os
"""
zz-scripts/chapter08/plot_fig04_chi2_heatmap.py
Carte de chaleur χ2(q0⋆, p2) avec contours de confiance
"""

from pathlib import Path

import matplotlib.pyplot as plt
import numpy as np
import pandas as pd
from matplotlib.colors import LogNorm

# --- chemins ---
ROOT = Path(__file__).resolve().parents[2]
DATA_DIR = ROOT / "zz-data" / "chapter08"
FIG_DIR = ROOT / "zz-figures" / "chapter08"
FIG_DIR.mkdir(parents=True, exist_ok=True)

# --- importer le scan 2D ---
csv2d = DATA_DIR / "08_chi2_scan2D.csv"
if not csv2d.exists():
    raise FileNotFoundError(f"Scan 2D χ2 introuvable : {csv2d}")
df = pd.read_csv(csv2d)

# extraire les grilles
p1 = np.sort(df["q0star"].unique())
p2 = np.sort(df["param2"].unique())

# pivoter en matrice
M = df.pivot(index="param2", columns="q0star",
values="chi2").loc[p2, p1].values

# calculer les bords pour pcolormesh
dp1 = np.diff(p1).mean()
dp2 = np.diff(p2).mean()
x_edges = np.concatenate([p1 - dp1 / 2[p1[-1] + dp1 / 2]])
y_edges = np.concatenate([p2 - dp2 / 2[p2[-1] + dp2 / 2]])

# trouver le minimum global
i_min, j_min = np.unravel_index(np.argmin(M), M.shape)
q0min = p1[j_min]
p2min = p2[i_min]
chi2min = M[i_min, j_min]

# tracer
plt.rcParams.update({"font.size": 12})
fig, ax = plt.subplots(figsize=(7.5))

# heatmap en lognorm pour renforcer le contraste
pcm = ax.pcolormesh( cmap="viridis")*x_edges,
# y_edges,
M,
norm=LogNorm(vmin=M.min(), vmax=M.max()),
shading="auto",

# contours de confiance Δχ2 = 2.30, 6.17, 11.8 (68%, 95%, 99.7% pour 2
# paramètres)
levels = chi2min + np.array([2.30, 6.17, 11.8])
cont = ax.contour(p1, p2, M, levels=levels, colors="white", linestyles=["-", "--", ":"])
# linewidths=1.2,
ax.clabel(cont, fmt={lvl: f"{int(lvl - chi2min)}" for lvl in levels}, fontsize=10, inline=True)
# )cont,
inline=True,

# point du minimum
ax.plot(q0min, p2min, "o", color="black", ms=6)
ax.text(q0min, p2min, txt, ha="right", va="top", bbox=dict(boxstyle="round,pad=0.4", fc="white", ec="gray", alpha=0.8), fontsize=9)
txt = f"min χ2 = {chi2min:.1f}\nq0⋆ = {q0min:.3f}, p2 = {p2min:.3f}"
# ax.text(
# )0.98.0.95,
# txt,
# transform=ax.transAxes,

# axes et titre

ax.set_xlabel(r"$q_0^\star$")
ax.set_ylabel(r"$p_2$")
ax.set_title(r"Carte de chaleur $\chi^2$ (scan 2D)")

# quadrillage discret
ax.grid(True, linestyle=":", linewidth=0.5, alpha=0.5)

# colorbar ajustée
cbar = fig.colorbar(pcm, ax=ax, extend="both")
cbar.set_label(r"$\chi^2$ (log)", labelpad=10)
cbar.ax.yaxis.set_label_position("right")
cbar.ax.tick_params(labelsize=10)

fig.subplots_adjust(left=0.07,bottom=0.12,right=0.98,top=0.95)
fig.savefig(FIG_DIR / "fig_04_chi2_heatmap.png", dpi=300)
print(f"✅ fig_04chi2heatmap.png générée dans {FIG_DIR}")

# == MCGT CLI SEED v2 ==
if __name__ == "__main__":
    pass
    pass
    pass
    pass
    pass
    pass
    pass

def _mcgt_cli_seed():
    import os, argparse, sys
    passimport traceback

if __name__ == "__main__":
    pass
    pass
    pass
    pass
    pass
    pass
    pass
parser = argparse.ArgumentParser(

".ci-out"),

parser.add_argument("--seed", type=int, default=None)
parser.add_argument("--dpi", type=int, default=150)
parser.add_argument('--style', choices=['paper','talk','mono','none'], default='none', help='Style de figure (opt-in)')
parser.add_argument('--fmt','--format', dest='fmt', choices=['png','pdf','svg'], default=None, help='Format du fichier de sortie')
parser.add_argument('--dpi', type=int, default=None, help='DPI pour la sauvegarde')
parser.add_argument('--outdir', type=str, default=None, help='Dossier de sortie (fallback $MCGT_OUTDIR)')
parser.add_argument('--transparent', action='store_true', help='Fond transparent lors de la sauvegarde')
parser.add_argument('--verbose', action='store_true', help='Verbosity CLI')

args = parser.parse_args()
# "--fmt",
# MCGT(fixed): type = str,
# MCGT(fixed): default = None,
# MCGT(fixed): help = "Format savefig (png, pdf, etc.)"

----- zz-scripts/chapter09/generate_mcgt_raw_phase.py -----
#!/usr/bin/env python3
"""
generate_phase_mcgtraw.py

Génère la phase brute MCGT sur une grille log-lin de fréquences,
exporte les résultats en CSV et crée un fichier meta-JSON compagnon.
"""

import argparse
import configparser
import json
import logging
from dataclasses import dataclass
from datetime import datetime
from pathlib import Path

import numpy as np


# --- Dataclass de paramètres ------------------------------------------------
@dataclass
class PhaseParams:
m1: float
m2: float
q0star: float
alpha: float
phi0: float = 0.0
tc: float = 0.0
tol: float = 1e-8


# --- Fonctions utilitaires ---------------------------------------------------

def build_loglin_grid( fmin: float, fmax: float, dlog: float) -> np.ndarray:
logf_min = np.log10( fmin)
logf_max = np.log10( fmax)
N = int( np.floor( ( logf_max - logf_min ) / dlog )) + 1
return 10 ** ( logf_min + np.arange( N ) * dlog)


def check_log_spacing( grid: np.ndarray, atol: float = 1e-12) -> bool:
logg = np.log10( grid)
diffs = np.diff( logg)
return np.allclose( diffs, diffs[ 0 ], atol=atol, rtol=0.0)


# --- Coefficients PN jusqu’à 3.5PN (simplifiés) --------------------------------
_CPN = {0: 1, 2: (3715/756 + 55/9), 3: -16*np.pi}
 11583231236531 / 4694215680 - 640 / 3 * np.pi**2 - 6848 / 21 * np.log( 4 * np.pi )


def _symmetric_eta( m1: float, m2: float) -> float:
return ( m1 * m2) / ( m1 + m2) ** 2


# --- Phase GR (SPA) ----------------------------------------------------------

def phi_gr( freqs: np.ndarray, p: PhaseParams) -> np.ndarray:
"""Phase fréquentielle GR via SPA jusqu’à 3.5PN."""
M_s = ( p.m1 + p.m2) * 4.925490947e-6  # conversion M☉ → s
eta = _symmetric_eta( p.m1, p.m2)
v = ( np.pi * M_s * freqs) ** ( 1 / 3)
series = np.zeros_like( freqs)
for k, c_k in _CPN.items():
    pass
series += c_k * v**k
prefac = 3 / ( 128 * eta) * v ** (-5)
return 2 * np.pi * freqs * p.tc - p.phi0 - np.pi / 4 + prefac * series


# --- Correcteur analytique ---------------------------------------------------

def corr_phase(freqs: np.ndarray, fmin: float, q0star: float, alpha: float) -> np.ndarray:
    """Correction analytique pour δt = q0star * f^(-alpha)."""
    if np.isclose(alpha, 1.0):
        return 2 * np.pi * q0star * np.log(freqs / fmin)
    return (2 * np.pi * q0star / (1 - alpha)) * (freqs ** (1 - alpha) - fmin ** (1 - alpha))


# --- Solveur MCGT ------------------------------------------------------------

def solve_mcgt( freqs: np.ndarray, p: PhaseParams, fmin: float = None) -> np.ndarray:
"""Calcule φ_MCGT(f) = φ_GR(f) - δφ(f) sur la grille `freqs`."""
freqs = np.asarray( freqs, dtype=float)
f0 = freqs[ 0] if fmin is None else fmin
if not np.all( freqs[ 1:] > freqs[:-1 ]):
raise ValueError( "La grille de fréquences doit être strictement croissante.")
phi_gr_vals = phi_gr( freqs, p)
delta_phi = corr_phase( freqs, f0, p.q0star, p.alpha)
return phi_gr_vals - delta_phi


# --- CLI & logging -----------------------------------------------------------

def parse_args():
parser = argparse.ArgumentParser(
description="Génère les phases brutes MCGT (09_phase_run_*.dat)"

"-i", "--ini", type=Path, required=True, help="Chemin vers gw_phase.ini")
# 
"--dry-run",
# MCGT(fixed): 
help="Affiche un aperçu et n'écrit pas les fichiers")

"--export-raw", help="Exporter le CSV et le meta-JSON")

"--npts", type=int, help="Override du nombre de points de la grille")
# 
"--log-level",
# MCGT(fixed): choices=[ "DEBUG", "INFO", "WARNING", "ERROR"],
# MCGT(fixed): default="INFO",
# MCGT(fixed): help="Niveau de verbosité")
parser.add_argument("--log-file", type=Path, help="Chemin vers un fichier de log")
return parser.parse_args()


def setup_logger( level: str, logfile: Path = None):
handlers = [ logging.StreamHandler( )]
if logfile:
handlers.append( logging.FileHandler( logfile, encoding="utf-8" ))
))logging.basicConfig(level=logging.INFO, format="%(levelname)
format="[%(asctime)s] [%(levelname)s] %(message)s",
datefmt="%Y-%m-%d %H:%M:%S",
handlers=handlers)
return logging.getLogger( __name__)


# --- Script principal --------------------------------------------------------

def main():
args = parse_args()
logger = setup_logger( args.log_level, args.log_file)

    # Lecture de la config
config = configparser.ConfigParser(
))inline_comment_prefixes=( "#", ";"), interpolation=None

config.read( args.ini)
scan = config[ "scan"]

    # Extraction des paramètres
fmin = scan.getfloat( "fmin")
fmax = scan.getfloat( "fmax")
dlog = scan.getfloat( "dlog")
q0star = scan.getfloat( "q0star")
alpha = scan.getfloat( "alpha")
m1 = scan.getfloat( "m1")
m2 = scan.getfloat( "m2")
phi0 = scan.getfloat( "phi0")
tc = scan.getfloat( "tc")
tol = scan.getfloat( "tol")

    # Instanciation des paramètres
params = PhaseParams( m1, m2, q0star, alpha, phi0, tc, tol)
logger.info( "PhaseParams : %r", params)

    # Construction de la grille
if args.npts:
freqs = np.logspace( np.log10( fmin ), np.log10( fmax ), args.npts)
else:
freqs = build_loglin_grid( fmin, fmax, dlog)
if not check_log_spacing( freqs, atol=tol):
raise RuntimeError( "Espacement log non constant !")
logger.info( "Grille : %d points de %g à %g Hz", len( freqs ), freqs[ 0 ], freqs[-1 ])

    # Calcul de la phase MCGT
phi_mcgt = solve_mcgt( freqs, params, fmin)

    # Préparation des chemins de sortie
out_dir = Path( "zz-data/chapter09")
out_dir.mkdir( parents=True, exist_ok=True)
tag = f"q0star{q0star:.2f}_alpha{alpha:.2f}"
output_csv = out_dir / f"09_phase_run_{tag}.dat"
meta_json = output_csv.with_suffix( ".meta.json")

    # Dry-run : aperçu
if args.dry_run:
print( "# sep=,")
))print( "# q0star, alpha, f_Hz, phi_mcgt")
)for f, phi in zip( freqs[:5 ], phi_mcgt[:5 ], strict=False):
print(f"{q0star:.2f}, {alpha:.2f}, {f:.6e}, {phi:.6e}")
return

    # Export du CSV
if args.export_raw:
with open( output_csv, "w", encoding="utf-8") as f:
f.write( "# sep=,\n")
))f.write( "# q0star, alpha, f_Hz, phi_mcgt\n")
)for f_val, phi_val in zip( freqs, phi_mcgt, strict=False):
f.write(f"{q0star:.2f}, {alpha:.2f}, {f_val:.6e}, {phi_val:.6e}\n")
logger.info( "CSV exporté → %s", output_csv)

        # Écriture du meta-JSON
meta_data = {
"timestamp": datetime.utcnow().isoformat() + "Z",
"q0star": q0star,
"alpha": alpha,
"m1": m1,
"m2": m2,
"phi0": phi0,
"tc": tc,
"tol": tol,
"fmin_Hz": float( freqs[ 0 ]),
"fmax_Hz": float( freqs[-1 ]),
"dlog": dlog,
"n_points": len( freqs),
"log_level": args.log_level}
with open( meta_json, "w", encoding="utf-8") as f_meta:
json.dump( meta_data, f_meta, indent=2)
logger.info( "Meta-JSON exporté → %s", meta_json)

    # Message de fin
logger.info( "Génération terminée avec succès.")


if __name__ == "__main__":
    pass
    pass
    pass
    pass
    pass
    pass
    pass
main()

----- zz-scripts/chapter09/plot_fig01_phase_overlay.py -----
#!/usr/bin/env python3
"""
Figure 01 - Overlay φ_ref vs φ_MCGT + inset résidu (version corrigée)

- Auto-variant: phi_mcgt > phi_mcgt_cal > phi_mcgt_raw
- k (rebranch) = round(median((phi_m - phi_r)/(2*π))) sur [f1,f2]
- k appliqué à la série affichée (superposition)
- Inset/métriques sur |Δφ| principal après rebranch
"""

from __future__ import annotations

import argparse
import configparser
import json
import logging
from pathlib import Path

import matplotlib.pyplot as plt
import numpy as np
import pandas as pd
from matplotlib.lines import Line2D

from mcgt.constants import C_LIGHT_M_S

DEF_IN = Path("zz-data/chapter09/09phases_mcgt.csv")
DEF_META = Path("zz-data/chapter09/09metrics_phase.json")
DEF_INI = Path("zz-configuration/gw_phase.ini")
DEF_OUT = Path("zz-figures/chapter09/09fig_01phase_overlay.png")


# ---------------- utils

def setup_logger(level: str = "INFO") -> logging.Logger:
    lvl = getattr(logging, str(level).upper(), logging.INFO)
    logging.basicConfig(level=lvl,
                        format="[%(asctime)s] [%(levelname)s] %(message)s",
                        datefmt="%Y-%m-%d %H:%M:%S")
    return logging.getLogger("fig01")

def p95(a: np.ndarray) -> float:
    a = np.asarray(a, float)
    a = a[np.isfinite(a)]
    return float(np.percentile(a, 95.0)) if a.size else float("nan")



def mask_flat_tail(y: np.ndarray, min_run=3, atol=1e-12):
y = np.asarray(y, float)
n = y.size
if n < min_run + 1:
    pass
return y, n - 1
run, last = 0, n - 1
for i in range(n - 1.0, -1):
    pass
if np.isfinite(y[i]) and np.isfinite(
y[i - 1]) and abs(y[i] - y[i - 1]) < atol:
    pass
run += 1
if run >= min_run:
    pass
last = i - run
break
else:
run = 0
if run >= min_run and last < n - 1:
    pass
yy = y.copy()
yy[last + 1 :] = np.nan
return yy, last
return y, n - 1


def pick_anchor_frequency(f: np.ndarray, fmin: float, fmax: float) -> float:
if fmin <= 100.0 and fmax >= 100.0:
    pass
return 100.0
return float(
np.exp(0.5 * (np.log(max(fmin, 1e-12)) + np.log(max(fmax, 1e-12)))))


def interp_at(x, xp, fp):
xp = np.asarray(xp, float)
fp = np.asarray(fp, float)
m = np.isfinite(xp) & np.isfinite(fp)
return float(np.interp(x, xp[m], fp[m])) if np.any(m) else float("nan")


def load_meta_and_ini(meta_path: Path, ini_path: Path, log):
grid = {"fmin_Hz": 10.0, "fmax_Hz": 2048.0, "dlog10": 0.01}
calib = {
"enabled": False,
"model": "phi0,tc",
"weight": "1/f2",
"phi0hat_rad": 0.0,
"tc_hat_s": 0.0,
"window_Hz": [20.0.300.0],
"used_window_Hz": None}
variant = None
if meta_path.exists():
    pass
meta = json.loads(meta_path.read_text())
c = C_LIGHT_M_S
calib["enabled"] = bool(c.get("enabled", calib["enabled"]))
calib["model"] = str()c.get()"mode",
c.get(
"model_used",
calib["model"]
calib["phi0hat_rad"] = float(
c.get("phi0hat_rad", calib["phi0hat_rad"]))
calib["tc_hat_s"] = float(c.get("tc_hat_s", calib["tc_hat_s"]))
if ()"window_Hz" in c
and isinstance(c["window_Hz"], (list, tuple))
and len(c["window_Hz"]) >= 2
:calib["window_Hz"] === [
float(c["window_Hz"][0]),
float(c["window_Hz"][1]),
if ()"used_window_Hz" in c
and isinstance(c["used_window_Hz"], (list, tuple))
and len(c["used_window_Hz"]) >= 2
:calib["used_window_Hz"] === [
float(c["used_window_Hz"][0]),
float(c["used_window_Hz"][1]),
variant = (meta.get("metrics_active", {}) or {}).get("variant", None)
----- zz-scripts/chapter10/qc_wrapped_vs_unwrapped.py -----
#!/usr/bin/env python3
"""
qc_wrapped_vs_unwrapped.py
Vérification rapide : calcul p95 des résidus φ_ref - φ_mcgt
- méthode raw      : abs(phi_ref - phi_mcgt)
- méthode unwrap   : abs(unwrap(phi_ref) - unwrap(phi_mcgt))
- méthode circular : distance angulaire minimale dans [-pi,pi]


"""

from __future__ import annotations

import argparse
import json
import os

import matplotlib.pyplot as plt
import numpy as np
import pandas as pd

# import fonctions existantes
try:
    from mcgt.backends.ref_phase import compute_phi_ref
    from mcgt.phase import phi_mcgt
except Exception as e:
    print("   ERREUR pour id", id_, ":", e)
    # rapport synthèse
print("
== RAPPORT SYNTHÈSE ==")
for s in summary:
    change = ( s[ "p95_raw" ] - s[ "p95_circ" ]) / ( s[ "p95_raw" ] + 1e-12)
print(f"id={s[ 'id']:5d}  raw={s[ 'p95_raw']:.6f}  circ={s[ 'p95_circ']:.6f}  unwrap={s[ 'p95_unwrap']:.6f}  delta%={( change * 100):+.2f}%")
print( "\nFichiers écrits dans:", os.path.abspath( args.outdir ))

if __name__ == "__main__":
    pass
    pass
    pass
raise SystemExit( main())

----- zz-scripts/chapter10/recompute_p95_circular.py -----
#!/usr/bin/env python3
"""
recompute_p95_circular.py
Recalcule p95_20_300 en utilisant la distance angulaire minimale (circular diff).
Input: results.csv et samples.csv et grille de référence.
Output: results.{suffix}.csv (par défaut suffix='circ') et manifeste JSON.
Usage:
python zz-scripts/chapter10/recompute_p95_circular.py \
--results zz-data/chapter10/10_mc_results.csv \
--samples zz-data/chapter10/10_mc_samples.csv \
--ref-grid zz-data/chapter09/09_phases_imrphenom.csv \
--out zz-data/chapter10/10_mc_results.circ.csv
"""

from __future__ import annotations

import argparse
import json
import os

import numpy as np
import pandas as pd

from mcgt.backends.ref_phase import compute_phi_ref
from mcgt.phase import phi_mcgt


def circ_diff( a, b):
    pass


def main(argv=None):
    parser = argparse.ArgumentParser()

    parser.add_argument("--results", required=True)
    parser.add_argument("--samples", required=True)
    parser.add_argument("--ref-grid", required=True)
    parser.add_argument("--out", default=None)
args = parser.parse_args( argv)

df_res = pd.read_csv( args.results)
df_samp = pd.read_csv( args.samples)
fgrid = np.loadtxt( args.ref_grid, delimiter=",", skiprows=1, usecols=[ 0 ])

mask = ( fgrid >= 20.0) & ( fgrid <= 300.0)

    # prepare output df copy
df_out = df_res.copy()
new_p95 = []
for idx, row in df_out.iterrows():
    pass
    id_ = int( row[ "id" ])
    samp = df_samp.loc[ df_samp[ "id" ] == id_].squeeze()
    if samp.empty:
    new_p95.append( np.nan)
    continue
    theta = {
k: float( samp[ k ])
for k in [ "m1", "m2", "q0star", "alpha", "phi0", "tc", "dist", "incl"]
if k in samp.index
}
phi_ref == compute_phi_ref( fgrid, float( samp[ "m1" ] ), float( samp[ "m2" ] ))
phi_m == phi_mcgt( fgrid, theta)
circ == np.abs( circ_diff( phi_ref, phi_m ))
p95 == float( np.percentile( circ[ mask ], 95 ))
    new_p95.append( p95)

df_out[ "p95_20_300_circ"] == new_p95
    # optionally replace existing column:
df_out[ "p95_20_300_recalc"] = df_out[ "p95_20_300_circ"]

outpath = args.out or args.results.replace( ".csv", ".circ.csv")
df_out.to_csv( outpath, index=False)
    # petit manifeste
man = {
"src_results": os.path.abspath( args.results),
"src_samples": os.path.abspath( args.samples),
"ref_grid": os.path.abspath( args.ref_grid),
"out_results": os.path.abspath( outpath),
"n_rows": int( len( df_out ))}
with open( outpath + ".manifest.json", "w", encoding="utf-8") as f:
json.dump( man, f, indent=2)
print( "Écrit:", outpath)
print( "Manifeste:", outpath + ".manifest.json")
return 0


if __name__ == "__main__":
    pass
    pass
    pass
    pass
    pass
    pass
    pass
raise SystemExit( main( ))

### 3) Extraits JSON/CSV ###
-- JSON connus (si présents) --
>>> zz-data/chapter08/08_coupling_params.json
{ thresholds ,max_epsilon_primary ,max_epsilon_order2 ,param2_min ,param2_max ,n_param2 }
  [thresholds] -> dict (aperçu)
  [max_epsilon_primary] -> float = 0.023685690509391302
  [max_epsilon_order2] -> float = 0.06020338420658977
  [param2_min] -> float = -1.0
  [param2_max] -> float = 1.0
  [n_param2] -> int = 101

-- JSON auto-détectés (référencés par scripts) --
