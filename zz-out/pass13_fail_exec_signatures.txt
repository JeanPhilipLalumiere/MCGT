[14] File "<PATH>", line <N> parser.add_argument( ^ SyntaxError: '(' was never closed

[3] File "<PATH>", line <N> OUTDIR_ENV = os.environ.get("MCGT_OUTDIR") IndentationError: unexpected indent

[3] File "<PATH>", line <N>, in __init__ self._engine = self._make_engine(f, self.engine) ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ File "<PATH>", line <N>, in _make_engine self.handles = get_handle( ^^^^^^^^^^^ 

[3] Traceback (most recent call last): File "<PATH>", line <N>, in <module> from mcgt.phase import phi_mcgt ImportError: cannot import name 'phi_mcgt' from 'mcgt.phase' (<PATH>)

[2] File "<PATH>", line <N> return parser.parse_args() IndentationError: unexpected indent

[2] File "<PATH>", line <N> os.makedirs(args.outdir, exist_ok=True) ^^ IndentationError: expected an indented block after 'try' statement on line <N>

[2] File "<PATH>", line <N> ap.add_argument('--style', choices=['paper', 'talk', 'mono', 'none'], default='none', help='Style de figure (opt-in)') ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

[2] File "<PATH>", line <N> args = parser.parse_args(argv) IndentationError: unexpected indent

[1] File "<PATH>", line <N> if __name__ == "__main__": ^^ IndentationError: expected an indented block after function definition on line <N>

[1] File "<PATH>", line <N> parser.add_argument( ^ File "<PATH>", line <N> SyntaxError: '(' was never closed OUTDIR_ENV = os.environ.get("MCGT_OUTDIR") IndentationError: unexpected indent

[1] File "<PATH>", line <N> parser.add_argument( ^ SyntaxError: '(' was never closed File "<PATH>", line <N> parser.add_argument( ^ SyntaxError: '(' was never closed

[1] File "<PATH>", line <N> width, height = <NUM>, <NUM> ^^^^^^^^^^^^ SyntaxError: invalid syntax. Maybe you meant '==' or ':=' instead of '='?

[1] usage: convert_milestones.py [-h] --src SRC [--dst DST] convert_milestones.py: error: the following arguments are required: --src

[1] File "<PATH>", line <N> possible_paths = [ ^ SyntaxError: '[' was never closed

[1] usage: generate_data_chapter<NUM>.py [-h] [--config CONFIG] [--npts NPTS] [--copy-jalons COPY_JALONS] [--dry-run] generate_data_chapter<NUM>.py: error: unrecognized arguments: --out zz-out<PATH> --dpi

[1] Traceback (most recent call last): File "<PATH>", line <N>, in <module> main() File "<PATH>", line <N>, in main A_s<NUM> = spec["constantes"]["A_s<NUM>"] ~~~~^^^^^^^^^^^^^^ KeyError: 'constantes'

[1] File "<PATH>", line <N> ax.plot(lims, lims, ls="--", color="black", label="Identité") ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ SyntaxError: invalid syntax. Perhaps you forgot a c

[1] Traceback (most recent call last): File "<PATH>", line <N>, in <module> main() File "<PATH>", line <N>, in main rf"Jalons $f_R$ et $f_{ RR} $ vs redshift $z\in[{ ^^ NameError: name 'RR' is not defined

[1] Traceback (most recent call last): File "<PATH>", line <N>, in <module> main() File "<PATH>", line <N>, in main rf"Jalons $f_R$ et $f_{ RR} $ vs âge $T\in[{ ^^ NameError: name 'RR' is not defined

[1] File "<PATH>", line <N> spec<NUM> = json.load(f) ^^^^^ IndentationError: expected an indented block after 'with' statement on line <N>

[1] ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ File "<PATH>", line <N>, in _parse_cached box = self._parser.parse(s, fontset, fontsize, dpi) ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ File "<PATH>",

[1] File "<PATH>", line <N> def _mcgt_cli_seed(): ^^^ IndentationError: expected an indented block after 'if' statement on line <N>

[1] File "<PATH>", line <N> } ^ SyntaxError: closing parenthesis '}' does not match opening parenthesis '(' on line <N>

[1] main() File "<PATH>", line <N>, in main interp_logR = PchipInterpolator(logT_r, logR_data, extrapolate=True) ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ File "<PATH>", line <N>, in __init__

[1] File "<PATH>", line <N> ax.annotate( ^ SyntaxError: '(' was never closed

[1] Traceback (most recent call last): File "<PATH>", line <N>, in <module> from mcgt.perturbations_scalaires import ( ModuleNotFoundError: No module named 'mcgt.perturbations_scalaires'

[1] Traceback (most recent call last): File "<PATH>", line <N>, in <module> pytest.skip( File "<PATH>", line <N>, in skip raise Skipped(msg=reason, allow_module_level=allow_module_level) Skipped: missing 

[1] File "<PATH>", line <N>, in <module> from mcgt.perturbations_scalaires import compute_cs<NUM>, compute_delta_phi ModuleNotFoundError: No module named 'mcgt.perturbations_scalaires' The above exception

[1] usage: apply_poly_unwrap_rebranch.py [-h] --csv CSV [--meta META] [--degree DEGREE] [--fit-window F_LO F_HI] [--metrics-window M_LO M_HI] [--basis {log<NUM>,hz}] [--from-column FROM_COLUMN] [--backup]

[1] usage: generate_data_chapter<NUM>.py [-h] --q<NUM>star_min Q<NUM>STAR_MIN --q<NUM>star_max Q<NUM>STAR_MAX --n_points N_POINTS [--export_derivative] [--export_heatmap] [--param<NUM>_min PARAM<NUM>_MIN]

[1] File "<PATH>", line <N> if ( ^^ SyntaxError: invalid syntax

[1] File "<PATH>", line <N> p.add_argument('--style', choices=['paper','talk','mono','none'], default='none', help='Style de figure (opt-in)') ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

[1] File "<PATH>", line <N> ap.add_argument( ^ SyntaxError: '(' was never closed

[1] usage: flag_jalons.py [-h] --csv CSV --meta META [--out OUT] [--metrics-window METRICS_WINDOW METRICS_WINDOW] [--sigma-warn SIGMA_WARN] [--sigma-fail SIGMA_FAIL] flag_jalons.py: error: the following a

[1] [--overwrite] [--skip-samples] [--skip-metrics] [--skip-jalons] [--skip-aggregate] [--n N] [--scramble | --no-scramble] [--seed SEED] [--sobol-offset SOBOL_OFFSET] [--batch BATCH] [--n-workers N_WORKE

[1] usage: opt_poly_rebranch.py [-h] --csv CSV --meta META [--fit-window FIT_WINDOW FIT_WINDOW] [--metrics-window METRICS_WINDOW METRICS_WINDOW] [--degrees DEGREES [DEGREES ...]] [--bases {log<NUM>,hz} [{

[1] [--calib-weight {flat,<NUM><PATH>,<NUM><PATH>}] [--auto-tighten] [--no-auto-tighten] [--tighten-window FMIN FMAX] [--tighten-threshold-p<NUM> TIGHTEN_THRESHOLD_P<NUM>] [--export-diff] [--export-anomal

[1] usage: check_p<NUM>_methods.py [-h] --csv CSV [--window WINDOW WINDOW] [--bins BINS [BINS ...]] [--plot] [--out-dir OUT_DIR] [--xscale {linear,log}] [--dpi DPI] check_p<NUM>_methods.py: error: the fol

[1] Traceback (most recent call last): File "<PATH>", line <N>, in <module> from pycbc.waveform import get_fd_waveform ModuleNotFoundError: No module named 'pycbc'

[1] Traceback (most recent call last): File "<PATH>", line <N>, in <module> from joblib import Parallel, delayed ModuleNotFoundError: No module named 'joblib'

